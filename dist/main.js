(()=>{"use strict";var n={327:(n,t,e)=>{e.d(t,{Z:()=>A});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,".buttonSwing {\n    animation: buttonSwingAnimation 1s forwards;\n}\n\n.invertColor {\n    animation: invertColorAnimation 1s forwards;\n}\n\n.invertColorReverse{\n    animation: invertColorAnimation 1s reverse;\n}\n\n.buttonSwingReverse {\n    animation: buttonSwingAnimation 1s reverse;\n}\n\n@keyframes buttonSwingAnimation {\n    100% {\n        animation-fill-mode: both;\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes invertColorAnimation {\n    100% {\n        filter: invert(1);\n    }\n}","",{version:3,sources:["webpack://./src/css/Common/animations.css"],names:[],mappings:"AAAA;IACI,2CAA2C;AAC/C;;AAEA;IACI,2CAA2C;AAC/C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI;QACI,yBAAyB;QACzB,yBAAyB;IAC7B;AACJ;;AAEA;IACI;QACI,iBAAiB;IACrB;AACJ",sourcesContent:[".buttonSwing {\n    animation: buttonSwingAnimation 1s forwards;\n}\n\n.invertColor {\n    animation: invertColorAnimation 1s forwards;\n}\n\n.invertColorReverse{\n    animation: invertColorAnimation 1s reverse;\n}\n\n.buttonSwingReverse {\n    animation: buttonSwingAnimation 1s reverse;\n}\n\n@keyframes buttonSwingAnimation {\n    100% {\n        animation-fill-mode: both;\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes invertColorAnimation {\n    100% {\n        filter: invert(1);\n    }\n}"],sourceRoot:""}]);const A=a},20:(n,t,e)=>{e.d(t,{Z:()=>A});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}","",{version:3,sources:["webpack://./src/css/Common/commonClasses.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,uCAAuC;IACvC,0CAA0C;IAC1C,0CAA0C;AAC9C",sourcesContent:[".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}"],sourceRoot:""}]);const A=a},176:(n,t,e)=>{e.d(t,{Z:()=>l});var r=e(537),o=e.n(r),i=e(645),a=e.n(i),A=e(20),d=e(327),s=e(300),c=a()(o());c.i(A.Z),c.i(d.Z),c.i(s.Z),c.push([n.id,":root {\n\t--xSmPadding: 0.4vw;\n\t--smPadding: 0.8vw;\n\t--medPadding: 1vw;\n\t--lgPadding: 1.5vw;\n\t--xLgPadding: 2.2vw;\n\n\t--mainColor: #20123a;\n\t--colorWhite: #eee;\n\t--colorBlack: #060606;\n\n\t--accentColor1: rgb(34,34,34);\n\t--accentColor2: rgb(41,41,41);\n\t--accentColor3: rgb(76, 56, 56);\n\t--accentColor4: rgb(77,77,77);\n\t--accentColor5: rgba(66,66,66, 0.8);\n\t\n\t--colorNotice: orangered;\n\t--colorImportant: rgb(246, 255, 0);\n\n\t--fontLight: #eee;\n\t--fontDark: #060606;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--boxShadow1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--boxShadow2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--boxShadow3: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.9) 0px 0px 0px 1px;;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}","",{version:3,sources:["webpack://./src/css/Common/global.css"],names:[],mappings:"AAIA;CACC,mBAAmB;CACnB,kBAAkB;CAClB,iBAAiB;CACjB,kBAAkB;CAClB,mBAAmB;;CAEnB,oBAAoB;CACpB,kBAAkB;CAClB,qBAAqB;;CAErB,6BAA6B;CAC7B,6BAA6B;CAC7B,+BAA+B;CAC/B,6BAA6B;CAC7B,mCAAmC;;CAEnC,wBAAwB;CACxB,kCAAkC;;CAElC,iBAAiB;CACjB,mBAAmB;;CAEnB,eAAe;CACf,sCAAsC;CACtC,sCAAsC;;CAEtC,eAAe;CACf,wCAAwC;CACxC,wCAAwC;CACxC,wCAAwC;;CAExC,6BAA6B;CAC7B,mBAAmB;;CAEnB,8EAA8E;CAC9E,0FAA0F;CAC1F,gGAAgG;;CAEhG,0CAA0C;AAC3C",sourcesContent:['@import url("commonClasses.css");\n@import url("animations.css");\n@import url("styleReset.css");\n\n:root {\n\t--xSmPadding: 0.4vw;\n\t--smPadding: 0.8vw;\n\t--medPadding: 1vw;\n\t--lgPadding: 1.5vw;\n\t--xLgPadding: 2.2vw;\n\n\t--mainColor: #20123a;\n\t--colorWhite: #eee;\n\t--colorBlack: #060606;\n\n\t--accentColor1: rgb(34,34,34);\n\t--accentColor2: rgb(41,41,41);\n\t--accentColor3: rgb(76, 56, 56);\n\t--accentColor4: rgb(77,77,77);\n\t--accentColor5: rgba(66,66,66, 0.8);\n\t\n\t--colorNotice: orangered;\n\t--colorImportant: rgb(246, 255, 0);\n\n\t--fontLight: #eee;\n\t--fontDark: #060606;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--boxShadow1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--boxShadow2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--boxShadow3: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.9) 0px 0px 0px 1px;;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}'],sourceRoot:""}]);const l=c},300:(n,t,e)=>{e.d(t,{Z:()=>A});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-min-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n","",{version:3,sources:["webpack://./src/css/Common/styleReset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,wBAAwB;CACxB,qBAAqB;AACtB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,kBAAkB;AACnB;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-min-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n"],sourceRoot:""}]);const A=a},609:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i),A=e(859),d=e(487),s=a()(o());s.i(A.Z),s.i(d.Z),s.push([n.id,"#content > #leftContainer,\n#content > #rightContainer {\n    grid-row: 2/11;\n}\n","",{version:3,sources:["webpack://./src/css/containers.css"],names:[],mappings:"AAGA;;IAEI,cAAc;AAClB",sourcesContent:['@import url("./leftContainer.css");\n@import url("./rightContainer.css");\n\n#content > #leftContainer,\n#content > #rightContainer {\n    grid-row: 2/11;\n}\n'],sourceRoot:""}]);const c=s},859:(n,t,e)=>{e.d(t,{Z:()=>A});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"#leftContainer {\n    grid-column: 1/3;\n    background-color: var(--accentColor1);\n    display: flex;\n    flex-direction: column;\n    gap: var(--lgPadding);\n}\n\n#leftContainer > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--xSmPadding);\n    padding: var(--smPadding) var(--medPadding) var(--smPadding);\n}\n\n#leftContainer > div > div.projectList {\n    width: 75%;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n    border-radius: var(--roundBorder);\n    background-color: var(--accentColor5);\n    cursor: pointer;\n    padding: var(--xSmPadding) var(--smPadding);\n}\n\n#leftContainer > div > *:first-child{\n    color: var(--colorNotice);\n    font-style: italic;\n    justify-self: center;\n}\n\n#leftContainer > div > div.projectList > * {\n    justify-self: flex-end;\n    margin: 0;\n\n}\n#leftContainer > div > div.projectList > *:last-child{\n    color: var(--colorImportant);\n    margin-left: auto;\n}\n\n#leftContainer > div > div.active,\n#leftContainer > div > div.projectList:hover{\n    background-color: var(--accentColor3);\n    box-shadow: var(--boxShadow1);\n}\n\n#leftContainer > #buttons {\n    display: flex;\n    margin-top: auto;\n    justify-self: flex-end;\n    align-self: center;\n    align-items: center;\n    flex-direction: row;\n    gap: var(--xSmPadding);\n}\n\n#leftContainer > #buttons > svg {\n    padding: var(--xSmPadding);\n    width: 100%;\n    fill:var(--colorWhite);\n    cursor: pointer;\n}\n\n#leftContainer > #buttons > svg:hover{\n    transition: 0.3s;\n    filter: invert(0.5);\n}","",{version:3,sources:["webpack://./src/css/leftContainer.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,qCAAqC;IACrC,aAAa;IACb,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,4DAA4D;AAChE;;AAEA;IACI,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,iCAAiC;IACjC,qCAAqC;IACrC,eAAe;IACf,2CAA2C;AAC/C;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,sBAAsB;IACtB,SAAS;;AAEb;AACA;IACI,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA;;IAEI,qCAAqC;IACrC,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;IAC1B,WAAW;IACX,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB",sourcesContent:["#leftContainer {\n    grid-column: 1/3;\n    background-color: var(--accentColor1);\n    display: flex;\n    flex-direction: column;\n    gap: var(--lgPadding);\n}\n\n#leftContainer > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--xSmPadding);\n    padding: var(--smPadding) var(--medPadding) var(--smPadding);\n}\n\n#leftContainer > div > div.projectList {\n    width: 75%;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n    border-radius: var(--roundBorder);\n    background-color: var(--accentColor5);\n    cursor: pointer;\n    padding: var(--xSmPadding) var(--smPadding);\n}\n\n#leftContainer > div > *:first-child{\n    color: var(--colorNotice);\n    font-style: italic;\n    justify-self: center;\n}\n\n#leftContainer > div > div.projectList > * {\n    justify-self: flex-end;\n    margin: 0;\n\n}\n#leftContainer > div > div.projectList > *:last-child{\n    color: var(--colorImportant);\n    margin-left: auto;\n}\n\n#leftContainer > div > div.active,\n#leftContainer > div > div.projectList:hover{\n    background-color: var(--accentColor3);\n    box-shadow: var(--boxShadow1);\n}\n\n#leftContainer > #buttons {\n    display: flex;\n    margin-top: auto;\n    justify-self: flex-end;\n    align-self: center;\n    align-items: center;\n    flex-direction: row;\n    gap: var(--xSmPadding);\n}\n\n#leftContainer > #buttons > svg {\n    padding: var(--xSmPadding);\n    width: 100%;\n    fill:var(--colorWhite);\n    cursor: pointer;\n}\n\n#leftContainer > #buttons > svg:hover{\n    transition: 0.3s;\n    filter: invert(0.5);\n}"],sourceRoot:""}]);const A=a},720:(n,t,e)=>{e.d(t,{Z:()=>A});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"#mainHeader {\n    grid-column: 1/11;\n    background-color: var(--accentColor4);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n}\n\n#mainHeader > img {\n    height: 64px;\n    width: auto;\n}","",{version:3,sources:["webpack://./src/css/mainHeader.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,qCAAqC;IACrC,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;AACf",sourcesContent:["#mainHeader {\n    grid-column: 1/11;\n    background-color: var(--accentColor4);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n}\n\n#mainHeader > img {\n    height: 64px;\n    width: auto;\n}"],sourceRoot:""}]);const A=a},487:(n,t,e)=>{e.d(t,{Z:()=>C});var r=e(537),o=e.n(r),i=e(645),a=e.n(i),A=e(667),d=e.n(A),s=new URL(e(122),e.b),c=a()(o());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap);"]);var l=d()(s);c.push([n.id,"#rightContainer{\n    grid-column: 3/11;\n    background-image: url("+l+");\n    background-repeat: no-repeat;\n    background-size: cover;\n    font-family: 'Rubik Dirt', cursive;\n}\n\n#rightContainer > #innerContainer {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n}\n\n#rightContainer > #innerContainer > #projects,\n#rightContainer > #innerContainer > #projects > div{\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: var(--smPadding);\n    width: 100%;\n}\n\n#rightContainer > #innerContainer > #projects {\n    gap: var(--xLgPadding);\n    align-self: flex-start;\n}\n\n#rightContainer > #innerContainer > #projects > div > h2.listHeader{\n    font-style: italic;\n    text-align: center;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: var(--smPadding);\n    background-color: var(--accentColor2);\n    padding: var(--smPadding);\n    width: 50%;\n    cursor: pointer;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.finished {\n    opacity: .4;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project:hover {\n    filter: invert(1);\n    opacity: 1;\n}\n\n\n#rightContainer > #innerContainer > #addProjectMenu{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 75%;\n    padding: var(--xLgPadding);\n    align-items: center;\n    align-self: flex-start;\n    margin-top: var(--xLgPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div {\n    width: fit-content;\n    display: flex;\n    gap: var(--medPadding);\n    display: flex;\n    flex-direction: column;\n    margin: var(--medPadding) 0;\n    padding: var(--smPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > div {\n    display: flex;\n    flex-direction: column;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div:last-child{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    width: 35%;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > * {\n    width: 100%;\n}","",{version:3,sources:["webpack://./src/css/rightContainer.css"],names:[],mappings:"AAEA;IACI,iBAAiB;IACjB,yDAAiD;IACjD,4BAA4B;IAC5B,sBAAsB;IACtB,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;;IAEI,SAAS;IACT,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,qBAAqB;IACrB,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;IACrB,qCAAqC;IACrC,yBAAyB;IACzB,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,UAAU;AACd;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,UAAU;IACV,0BAA0B;IAC1B,mBAAmB;IACnB,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,UAAU;AACd;;AAEA;IACI,WAAW;AACf",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap');\n\n#rightContainer{\n    grid-column: 3/11;\n    background-image: url(\"../images/background.jpg\");\n    background-repeat: no-repeat;\n    background-size: cover;\n    font-family: 'Rubik Dirt', cursive;\n}\n\n#rightContainer > #innerContainer {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n}\n\n#rightContainer > #innerContainer > #projects,\n#rightContainer > #innerContainer > #projects > div{\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: var(--smPadding);\n    width: 100%;\n}\n\n#rightContainer > #innerContainer > #projects {\n    gap: var(--xLgPadding);\n    align-self: flex-start;\n}\n\n#rightContainer > #innerContainer > #projects > div > h2.listHeader{\n    font-style: italic;\n    text-align: center;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: var(--smPadding);\n    background-color: var(--accentColor2);\n    padding: var(--smPadding);\n    width: 50%;\n    cursor: pointer;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.finished {\n    opacity: .4;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project:hover {\n    filter: invert(1);\n    opacity: 1;\n}\n\n\n#rightContainer > #innerContainer > #addProjectMenu{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 75%;\n    padding: var(--xLgPadding);\n    align-items: center;\n    align-self: flex-start;\n    margin-top: var(--xLgPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div {\n    width: fit-content;\n    display: flex;\n    gap: var(--medPadding);\n    display: flex;\n    flex-direction: column;\n    margin: var(--medPadding) 0;\n    padding: var(--smPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > div {\n    display: flex;\n    flex-direction: column;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div:last-child{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    width: 35%;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > * {\n    width: 100%;\n}"],sourceRoot:""}]);const C=c},402:(n,t,e)=>{e.d(t,{Z:()=>l});var r=e(537),o=e.n(r),i=e(645),a=e.n(i),A=e(176),d=e(609),s=e(720),c=a()(o());c.i(A.Z),c.i(d.Z),c.i(s.Z),c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap);"]),c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap);"]),c.push([n.id,"html,\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    font-family: \"Lato\";\n    font-family: 'Rubik Dirt', cursive;\n}\n\nbody {\n    background-color: var(--mainColor);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--fontLight);\n}\n\n#content {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    grid-template-columns: repeat(10, 1fr);\n    box-shadow: var(--boxShadow1);\n}\n\nbutton {\n    font-size: 12px;\n    cursor: pointer;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--xSmPadding);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@media (max-width: 1600px) { \n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 75%;\n    }\n}\n\n@media (max-width:600px) { \n    * {\n        font-size: small;\n    }\n\n    #content > #topHeader > img {\n        height: 50px;\n    }\n    #content {\n        height: 100%;\n        width: 100%;\n    }\n    #leftContainer {\n        grid-column: 1/4;\n    }\n    #content > #rightContainer{\n        grid-column: 4/11;\n    }\n\n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 95%;\n        padding: 0;\n    }\n\n    #content > #rightContainer > #innerContainer > #addProjectMenu {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    #buttons{\n        flex-direction: row;\n    }\n }","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAQA;;IAEI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,kCAAkC;AACtC;;AAEA;IACI,kCAAkC;IAClC,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,WAAW;IACX,aAAa;IACb,mCAAmC;IACnC,sCAAsC;IACtC,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,yBAAyB;IACzB,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,YAAY;IAChB;IACA;QACI,YAAY;QACZ,WAAW;IACf;IACA;QACI,gBAAgB;IACpB;IACA;QACI,iBAAiB;IACrB;;IAEA;QACI,UAAU;QACV,UAAU;IACd;;IAEA;QACI,WAAW;QACX,YAAY;QACZ,SAAS;QACT,UAAU;IACd;;IAEA;QACI,mBAAmB;IACvB;CACH",sourcesContent:["@import url(\"./Common/global.css\");\n@import url(\"./containers.css\");\n@import url(\"./mainHeader.css\");\n\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap');\n\nhtml,\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    font-family: \"Lato\";\n    font-family: 'Rubik Dirt', cursive;\n}\n\nbody {\n    background-color: var(--mainColor);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--fontLight);\n}\n\n#content {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    grid-template-columns: repeat(10, 1fr);\n    box-shadow: var(--boxShadow1);\n}\n\nbutton {\n    font-size: 12px;\n    cursor: pointer;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--xSmPadding);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@media (max-width: 1600px) { \n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 75%;\n    }\n}\n\n@media (max-width:600px) { \n    * {\n        font-size: small;\n    }\n\n    #content > #topHeader > img {\n        height: 50px;\n    }\n    #content {\n        height: 100%;\n        width: 100%;\n    }\n    #leftContainer {\n        grid-column: 1/4;\n    }\n    #content > #rightContainer{\n        grid-column: 4/11;\n    }\n\n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 95%;\n        padding: 0;\n    }\n\n    #content > #rightContainer > #innerContainer > #addProjectMenu {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    #buttons{\n        flex-direction: row;\n    }\n }"],sourceRoot:""}]);const l=c},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),t.push(c))}},t}},667:n=>{n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var d=n[A],s=r.base?d[0]+r.base:d[0],c=i[s]||0,l="".concat(s," ").concat(c);i[s]=c+1;var C=e(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==C)t[C].references++,t[C].updater(p);else{var g=o(p,r);r.byIndex=A,t.splice(A,0,{identifier:l,updater:g,references:1})}a.push(l)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=e(i[a]);t[A].references--}for(var d=r(n,o),s=0;s<i.length;s++){var c=e(i[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=d}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},122:(n,t,e)=>{n.exports=e.p+"d81a4b52c31ade424432.jpg"}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),i=e(569),a=e.n(i),A=e(565),d=e.n(A),s=e(216),c=e.n(s),l=e(589),C=e.n(l),p=e(402),g={};g.styleTagTransform=C(),g.setAttributes=d(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=c(),t()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;const u=function(){const n=n=>n.parentNode.removeChild(n),t=(n,t)=>t.appendChild(n),e=()=>({setList:n=>e.list=n,getList:()=>e.list});return{toggleProjectMenu:function(){const r=document.querySelector("#innerContainer");document.querySelector("#addProjectMenu")?(n(document.querySelector("#addProjectMenu")),t(e().getList(),r)):(e().setList(document.querySelector("#projects")),t((()=>{const n=document.createElement("div"),t=document.createElement("h2"),e=document.createElement("div"),r=document.createElement("button"),o=document.createElement("button");t.textContent="Add a new project",r.textContent="Add Project",o.textContent="Cancel",o.id="cancelBtn",r.id="acceptAddBtn",e.appendChild(r),e.appendChild(o),n.id="addProjectMenu";const i=(n=>{const t=document.createElement("div");for(let e=0;e<n.length;e++){const r=n[e],o=document.createElement("div"),i=document.createElement("label");i.for=r.name,i.textContent=r.text,o.appendChild(i);const a=document.createElement("input");a.type=r.type,a.id=r.id,a.name=r.name,o.appendChild(a),t.appendChild(o)}return t})([{type:"text",id:"projectName",name:"projectName",text:"Name"},{type:"text",id:"subject",name:"subject",text:"Subject"},{type:"text",id:"description",name:"description",text:"description"},{type:"date",id:"date",name:"date",text:"Date"}]);return n.appendChild(t),n.appendChild(i),n.appendChild(e),n})(),r),n(e().getList()),B.menuButtons())}}}(),m=function(){const n=n=>document.querySelector(`#${n}`);return{darkmodeBtn:()=>"darkmodeBtn",addProjectBtn:()=>"addProjectBtn",content:()=>"content",cancelBtn:()=>"cancelBtn",acceptAddBtn:()=>"acceptAddBtn",toggleMenu:()=>u.toggleProjectMenu(),createIdElementPair:t=>({id:t,element:n(t)})}}(),B=function(){const n=n=>{document.querySelector("#"+n.id).addEventListener(n.trigger,n.callback)},t=(n,t)=>{n.classList.add(t),n.addEventListener("animationend",(()=>{n.classList.remove(t)}))};return{startup:function(){const e=m.createIdElementPair(m.darkmodeBtn()),r=m.createIdElementPair(m.addProjectBtn()),o=m.createIdElementPair(m.content()),i=[{id:e.id,callback:()=>{var n,r;r="invertColor",(n=o.element).classList.contains(r)?n.classList.remove(r):n.classList.add(r),o.element.classList.contains("invertColor")?t(e.element,"buttonSwing"):t(e.element,"buttonSwingReverse")},trigger:"click"},{id:r.id,callback:()=>{t(r.element,"buttonSwing"),m.toggleMenu()},trigger:"click"}];for(let t=0;t<i.length;t++)n(i[t])},menuButtons:function(){const t=m.cancelBtn();n({id:t,trigger:"click",callback:()=>{m.toggleMenu()}});const e=m.acceptAddBtn();n({id:e,trigger:"click",callback:()=>{console.log("Project Accepted"),m.toggleMenu()}})}}}();window.addEventListener("load",(()=>{B.startup()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,