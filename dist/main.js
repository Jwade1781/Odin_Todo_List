(()=>{"use strict";var n={327:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".buttonSwing {\n    transition: 1s;\n    animation-fill-mode: both;\n    transform: rotate(360deg);\n}\n\n.invertColor {\n    filter: invert(1);\n    transition: 2s;\n}","",{version:3,sources:["webpack://./src/css/Common/animations.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,cAAc;AAClB",sourcesContent:[".buttonSwing {\n    transition: 1s;\n    animation-fill-mode: both;\n    transform: rotate(360deg);\n}\n\n.invertColor {\n    filter: invert(1);\n    transition: 2s;\n}"],sourceRoot:""}]);const A=a},20:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}","",{version:3,sources:["webpack://./src/css/Common/commonClasses.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,uCAAuC;IACvC,0CAA0C;IAC1C,0CAA0C;AAC9C",sourcesContent:[".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}"],sourceRoot:""}]);const A=a},176:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(20),d=t(327),c=t(300),s=a()(o());s.i(A.Z),s.i(d.Z),s.i(c.Z),s.push([n.id,":root {\n\t--xSmPadding: 0.4vw;\n\t--smPadding: 0.8vw;\n\t--medPadding: 1vw;\n\t--lgPadding: 1.5vw;\n\t--xLgPadding: 2.2vw;\n\n\t--mainColor: #20123a;\n\t--colorWhite: #eee;\n\t--colorBlack: #060606;\n\n\t--accentColor1: rgb(34,34,34);\n\t--accentColor2: rgb(41,41,41);\n\t--accentColor3: rgb(76, 56, 56);\n\t--accentColor4: rgb(77,77,77);\n\t--accentColor5: rgba(66,66,66, 0.8);\n\t\n\t--colorNotice: orangered;\n\t--colorImportant: rgb(246, 255, 0);\n\n\t--fontLight: #eee;\n\t--fontDark: #060606;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--boxShadow1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--boxShadow2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--boxShadow3: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.9) 0px 0px 0px 1px;;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}","",{version:3,sources:["webpack://./src/css/Common/global.css"],names:[],mappings:"AAIA;CACC,mBAAmB;CACnB,kBAAkB;CAClB,iBAAiB;CACjB,kBAAkB;CAClB,mBAAmB;;CAEnB,oBAAoB;CACpB,kBAAkB;CAClB,qBAAqB;;CAErB,6BAA6B;CAC7B,6BAA6B;CAC7B,+BAA+B;CAC/B,6BAA6B;CAC7B,mCAAmC;;CAEnC,wBAAwB;CACxB,kCAAkC;;CAElC,iBAAiB;CACjB,mBAAmB;;CAEnB,eAAe;CACf,sCAAsC;CACtC,sCAAsC;;CAEtC,eAAe;CACf,wCAAwC;CACxC,wCAAwC;CACxC,wCAAwC;;CAExC,6BAA6B;CAC7B,mBAAmB;;CAEnB,8EAA8E;CAC9E,0FAA0F;CAC1F,gGAAgG;;CAEhG,0CAA0C;AAC3C",sourcesContent:['@import url("commonClasses.css");\n@import url("animations.css");\n@import url("styleReset.css");\n\n:root {\n\t--xSmPadding: 0.4vw;\n\t--smPadding: 0.8vw;\n\t--medPadding: 1vw;\n\t--lgPadding: 1.5vw;\n\t--xLgPadding: 2.2vw;\n\n\t--mainColor: #20123a;\n\t--colorWhite: #eee;\n\t--colorBlack: #060606;\n\n\t--accentColor1: rgb(34,34,34);\n\t--accentColor2: rgb(41,41,41);\n\t--accentColor3: rgb(76, 56, 56);\n\t--accentColor4: rgb(77,77,77);\n\t--accentColor5: rgba(66,66,66, 0.8);\n\t\n\t--colorNotice: orangered;\n\t--colorImportant: rgb(246, 255, 0);\n\n\t--fontLight: #eee;\n\t--fontDark: #060606;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--boxShadow1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--boxShadow2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--boxShadow3: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.9) 0px 0px 0px 1px;;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}'],sourceRoot:""}]);const l=s},300:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-min-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n","",{version:3,sources:["webpack://./src/css/Common/styleReset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,wBAAwB;CACxB,qBAAqB;AACtB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,kBAAkB;AACnB;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-min-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n"],sourceRoot:""}]);const A=a},609:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(859),d=t(487),c=a()(o());c.i(A.Z),c.i(d.Z),c.push([n.id,"#content > #leftContainer,\n#content > #rightContainer {\n    grid-row: 2/11;\n}\n","",{version:3,sources:["webpack://./src/css/containers.css"],names:[],mappings:"AAGA;;IAEI,cAAc;AAClB",sourcesContent:['@import url("./leftContainer.css");\n@import url("./rightContainer.css");\n\n#content > #leftContainer,\n#content > #rightContainer {\n    grid-row: 2/11;\n}\n'],sourceRoot:""}]);const s=c},859:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"#leftContainer {\n    grid-column: 1/3;\n    background-color: var(--accentColor1);\n    display: flex;\n    flex-direction: column;\n    gap: var(--lgPadding);\n}\n\n#leftContainer > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--xSmPadding);\n    padding: var(--smPadding) var(--medPadding) var(--smPadding);\n}\n\n#leftContainer > div > div.projectList {\n    width: 75%;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n    border-radius: var(--roundBorder);\n    background-color: var(--accentColor5);\n    cursor: pointer;\n    padding: var(--xSmPadding) var(--smPadding);\n}\n\n#leftContainer > div > *:first-child{\n    color: var(--colorNotice);\n    font-style: italic;\n    justify-self: center;\n}\n\n#leftContainer > div > div.projectList > * {\n    justify-self: flex-end;\n    margin: 0;\n\n}\n#leftContainer > div > div.projectList > *:last-child{\n    color: var(--colorImportant);\n    margin-left: auto;\n}\n\n#leftContainer > div > div.active,\n#leftContainer > div > div.projectList:hover{\n    background-color: var(--accentColor3);\n    box-shadow: var(--boxShadow1);\n}\n\n#leftContainer > #buttons {\n    display: flex;\n    margin-top: auto;\n    justify-self: flex-end;\n    align-self: center;\n    align-items: center;\n    flex-direction: row;\n    gap: var(--xSmPadding);\n}\n\n#leftContainer > #buttons > svg {\n    padding: var(--xSmPadding);\n    width: 100%;\n    fill:var(--colorWhite);\n    cursor: pointer;\n}\n\n#leftContainer > #buttons > svg:hover{\n    transition: 0.3s;\n    filter: invert(0.5);\n}","",{version:3,sources:["webpack://./src/css/leftContainer.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,qCAAqC;IACrC,aAAa;IACb,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,4DAA4D;AAChE;;AAEA;IACI,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,iCAAiC;IACjC,qCAAqC;IACrC,eAAe;IACf,2CAA2C;AAC/C;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,sBAAsB;IACtB,SAAS;;AAEb;AACA;IACI,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA;;IAEI,qCAAqC;IACrC,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;IAC1B,WAAW;IACX,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB",sourcesContent:["#leftContainer {\n    grid-column: 1/3;\n    background-color: var(--accentColor1);\n    display: flex;\n    flex-direction: column;\n    gap: var(--lgPadding);\n}\n\n#leftContainer > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--xSmPadding);\n    padding: var(--smPadding) var(--medPadding) var(--smPadding);\n}\n\n#leftContainer > div > div.projectList {\n    width: 75%;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n    border-radius: var(--roundBorder);\n    background-color: var(--accentColor5);\n    cursor: pointer;\n    padding: var(--xSmPadding) var(--smPadding);\n}\n\n#leftContainer > div > *:first-child{\n    color: var(--colorNotice);\n    font-style: italic;\n    justify-self: center;\n}\n\n#leftContainer > div > div.projectList > * {\n    justify-self: flex-end;\n    margin: 0;\n\n}\n#leftContainer > div > div.projectList > *:last-child{\n    color: var(--colorImportant);\n    margin-left: auto;\n}\n\n#leftContainer > div > div.active,\n#leftContainer > div > div.projectList:hover{\n    background-color: var(--accentColor3);\n    box-shadow: var(--boxShadow1);\n}\n\n#leftContainer > #buttons {\n    display: flex;\n    margin-top: auto;\n    justify-self: flex-end;\n    align-self: center;\n    align-items: center;\n    flex-direction: row;\n    gap: var(--xSmPadding);\n}\n\n#leftContainer > #buttons > svg {\n    padding: var(--xSmPadding);\n    width: 100%;\n    fill:var(--colorWhite);\n    cursor: pointer;\n}\n\n#leftContainer > #buttons > svg:hover{\n    transition: 0.3s;\n    filter: invert(0.5);\n}"],sourceRoot:""}]);const A=a},720:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"#mainHeader {\n    grid-column: 1/11;\n    background-color: var(--accentColor4);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n}\n\n#mainHeader > img {\n    height: 64px;\n    width: auto;\n}","",{version:3,sources:["webpack://./src/css/mainHeader.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,qCAAqC;IACrC,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;AACf",sourcesContent:["#mainHeader {\n    grid-column: 1/11;\n    background-color: var(--accentColor4);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n}\n\n#mainHeader > img {\n    height: 64px;\n    width: auto;\n}"],sourceRoot:""}]);const A=a},487:(n,e,t)=>{t.d(e,{Z:()=>C});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(667),d=t.n(A),c=new URL(t(122),t.b),s=a()(o());s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap);"]);var l=d()(c);s.push([n.id,"#rightContainer{\n    grid-column: 3/11;\n    background-image: url("+l+");\n    background-repeat: no-repeat;\n    background-size: cover;\n    font-family: 'Rubik Dirt', cursive;\n}\n\n#rightContainer > #innerContainer {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n}\n\n#rightContainer > #innerContainer > #projects,\n#rightContainer > #innerContainer > #projects > div{\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: var(--smPadding);\n    width: 100%;\n}\n\n#rightContainer > #innerContainer > #projects {\n    gap: var(--xLgPadding);\n    align-self: flex-start;\n}\n\n#rightContainer > #innerContainer > #projects > div > h2.listHeader{\n    font-style: italic;\n    text-align: center;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: var(--smPadding);\n    background-color: var(--accentColor2);\n    padding: var(--smPadding);\n    width: 50%;\n    cursor: pointer;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.finished {\n    opacity: .4;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project:hover {\n    filter: invert(1);\n    opacity: 1;\n}\n\n\n#rightContainer > #innerContainer > #addProjectMenu{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 75%;\n    padding: var(--xLgPadding);\n    align-items: center;\n    align-self: flex-start;\n    margin-top: var(--xLgPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div {\n    width: fit-content;\n    display: flex;\n    gap: var(--medPadding);\n    display: flex;\n    flex-direction: column;\n    margin: var(--medPadding) 0;\n    padding: var(--smPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > div {\n    display: flex;\n    flex-direction: column;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div:last-child{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    width: 35%;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > * {\n    width: 100%;\n}","",{version:3,sources:["webpack://./src/css/rightContainer.css"],names:[],mappings:"AAEA;IACI,iBAAiB;IACjB,yDAAiD;IACjD,4BAA4B;IAC5B,sBAAsB;IACtB,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;;IAEI,SAAS;IACT,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,qBAAqB;IACrB,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;IACrB,qCAAqC;IACrC,yBAAyB;IACzB,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,UAAU;AACd;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,UAAU;IACV,0BAA0B;IAC1B,mBAAmB;IACnB,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,UAAU;AACd;;AAEA;IACI,WAAW;AACf",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap');\n\n#rightContainer{\n    grid-column: 3/11;\n    background-image: url(\"../images/background.jpg\");\n    background-repeat: no-repeat;\n    background-size: cover;\n    font-family: 'Rubik Dirt', cursive;\n}\n\n#rightContainer > #innerContainer {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n}\n\n#rightContainer > #innerContainer > #projects,\n#rightContainer > #innerContainer > #projects > div{\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: var(--smPadding);\n    width: 100%;\n}\n\n#rightContainer > #innerContainer > #projects {\n    gap: var(--xLgPadding);\n    align-self: flex-start;\n}\n\n#rightContainer > #innerContainer > #projects > div > h2.listHeader{\n    font-style: italic;\n    text-align: center;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: var(--smPadding);\n    background-color: var(--accentColor2);\n    padding: var(--smPadding);\n    width: 50%;\n    cursor: pointer;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.finished {\n    opacity: .4;\n}\n\n#rightContainer > #innerContainer > #projects > div > div.project:hover {\n    filter: invert(1);\n    opacity: 1;\n}\n\n\n#rightContainer > #innerContainer > #addProjectMenu{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 75%;\n    padding: var(--xLgPadding);\n    align-items: center;\n    align-self: flex-start;\n    margin-top: var(--xLgPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div {\n    width: fit-content;\n    display: flex;\n    gap: var(--medPadding);\n    display: flex;\n    flex-direction: column;\n    margin: var(--medPadding) 0;\n    padding: var(--smPadding);\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > div {\n    display: flex;\n    flex-direction: column;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div:last-child{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    width: 35%;\n}\n\n#rightContainer > #innerContainer > #addProjectMenu > div > * {\n    width: 100%;\n}"],sourceRoot:""}]);const C=s},402:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(176),d=t(609),c=t(720),s=a()(o());s.i(A.Z),s.i(d.Z),s.i(c.Z),s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap);"]),s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap);"]),s.push([n.id,"html,\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    font-family: \"Lato\";\n    font-family: 'Rubik Dirt', cursive;\n}\n\nbody {\n    background-color: var(--mainColor);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--fontLight);\n}\n\n#content {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    grid-template-columns: repeat(10, 1fr);\n    box-shadow: var(--boxShadow1);\n}\n\nbutton {\n    font-size: 12px;\n    cursor: pointer;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--xSmPadding);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@media (max-width: 1600px) { \n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 75%;\n    }\n}\n\n@media (max-width:600px) { \n    * {\n        font-size: small;\n    }\n\n    #content > #topHeader > img {\n        height: 50px;\n    }\n    #content {\n        height: 100%;\n        width: 100%;\n    }\n    #leftContainer {\n        grid-column: 1/4;\n    }\n    #content > #rightContainer{\n        grid-column: 4/11;\n    }\n\n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 95%;\n        padding: 0;\n    }\n\n    #content > #rightContainer > #innerContainer > #addProjectMenu {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    #buttons{\n        flex-direction: row;\n    }\n }","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAQA;;IAEI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,kCAAkC;AACtC;;AAEA;IACI,kCAAkC;IAClC,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,WAAW;IACX,aAAa;IACb,mCAAmC;IACnC,sCAAsC;IACtC,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,yBAAyB;IACzB,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,YAAY;IAChB;IACA;QACI,YAAY;QACZ,WAAW;IACf;IACA;QACI,gBAAgB;IACpB;IACA;QACI,iBAAiB;IACrB;;IAEA;QACI,UAAU;QACV,UAAU;IACd;;IAEA;QACI,WAAW;QACX,YAAY;QACZ,SAAS;QACT,UAAU;IACd;;IAEA;QACI,mBAAmB;IACvB;CACH",sourcesContent:["@import url(\"./Common/global.css\");\n@import url(\"./containers.css\");\n@import url(\"./mainHeader.css\");\n\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Rubik+Dirt&display=swap');\n\nhtml,\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    font-family: \"Lato\";\n    font-family: 'Rubik Dirt', cursive;\n}\n\nbody {\n    background-color: var(--mainColor);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--fontLight);\n}\n\n#content {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    grid-template-columns: repeat(10, 1fr);\n    box-shadow: var(--boxShadow1);\n}\n\nbutton {\n    font-size: 12px;\n    cursor: pointer;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--xSmPadding);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@media (max-width: 1600px) { \n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 75%;\n    }\n}\n\n@media (max-width:600px) { \n    * {\n        font-size: small;\n    }\n\n    #content > #topHeader > img {\n        height: 50px;\n    }\n    #content {\n        height: 100%;\n        width: 100%;\n    }\n    #leftContainer {\n        grid-column: 1/4;\n    }\n    #content > #rightContainer{\n        grid-column: 4/11;\n    }\n\n    #content > #rightContainer > #innerContainer > #projects > div > div.project{\n        width: 95%;\n        padding: 0;\n    }\n\n    #content > #rightContainer > #innerContainer > #addProjectMenu {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    #buttons{\n        flex-direction: row;\n    }\n }"],sourceRoot:""}]);const l=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var d=n[A],c=r.base?d[0]+r.base:d[0],s=i[c]||0,l="".concat(c," ").concat(s);i[c]=s+1;var C=t(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==C)e[C].references++,e[C].updater(p);else{var g=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:g,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var d=r(n,o),c=0;c<i.length;c++){var s=t(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},122:(n,e,t)=>{n.exports=t.p+"d81a4b52c31ade424432.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),d=t.n(A),c=t(216),s=t.n(c),l=t(589),C=t.n(l),p=t(402),g={};g.styleTagTransform=C(),g.setAttributes=d(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=s(),e()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;const u=function(){const n=function(){const n=e=>({setList:e=>n.list=e,getList:()=>n.list});return{addNewProjectMenu:function(){const e=document.querySelector("#innerContainer");document.querySelector("#addProjectMenu")?(u().removeElement(document.querySelector("#addProjectMenu")),u().addElement(n().getList(),e)):(n().setList(document.querySelector("#projects")),u().addElement((()=>{const n=document.createElement("div"),e=document.createElement("h2"),t=document.createElement("div"),r=document.createElement("button"),o=document.createElement("button");e.textContent="Add a new project",r.textContent="Add Project",o.textContent="Cancel",t.appendChild(r),t.appendChild(o),n.id="addProjectMenu";const i=(n=>{const e=document.createElement("div");for(let t=0;t<n.length;t++){const r=n[t],o=document.createElement("div"),i=document.createElement("label");i.for=r.name,i.textContent=r.text,o.appendChild(i);const a=document.createElement("input");a.type=r.type,a.id=r.id,a.name=r.name,o.appendChild(a),e.appendChild(o)}return e})([{type:"text",id:"projectName",name:"projectName",text:"Name"},{type:"text",id:"subject",name:"subject",text:"Subject"},{type:"text",id:"description",name:"description",text:"description"},{type:"date",id:"date",name:"date",text:"Date"}]);return n.appendChild(e),n.appendChild(i),n.appendChild(t),n})(),e),u().removeElement(n().getList()))}}}();return{addNewProjectMenu:()=>n.addNewProjectMenu(),removeElement:n=>n.parentNode.removeChild(n),addElement:(n,e)=>e.appendChild(n)}},m=function(){return{createHandlers:()=>function(){const n=u(),e=(n,e)=>{const t=document.querySelector(`#${n}`);t.classList.contains(e)?t.classList.remove(e):t.classList.add(e)},t=[{id:"darkmodeBtn",callback:()=>e("content","invertColor"),trigger:"click"},{id:"darkmodeBtn",callback:()=>e("darkmodeBtn","buttonSwing"),trigger:"click"},{id:"addProjectBtn",callback:()=>n.addNewProjectMenu(),trigger:"click"},{id:"addProjectBtn",callback:()=>e("addProjectBtn","buttonSwing"),trigger:"click"}];for(let n=0;n<t.length;n++)r=t[n],document.querySelector("#"+r.id).addEventListener(r.trigger,r.callback);var r}()}};window.addEventListener("load",(()=>{m().createHandlers()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RyxHQUE1RHJGLEVBQVFzRixVQUFVRSxJQUFJSCxFQUFnRCxFQUcvR0ksRUFBUSxDQUNWLENBQ0ksR0FBTSxjQUNOLFNBQVksSUFBTU4sRUFBWSxVQUFXLGVBQ3pDLFFBQVcsU0FHZixDQUNJLEdBQU0sY0FDTixTQUFZLElBQU1BLEVBQVksY0FBZSxlQUM3QyxRQUFXLFNBR2YsQ0FDSSxHQUFNLGdCQUNOLFNBQVksSUFBTUQsRUFBV3RCLG9CQUM3QixRQUFXLFNBR2YsQ0FDSSxHQUFNLGdCQUNOLFNBQVksSUFBTXVCLEVBQVksZ0JBQWlCLGVBQy9DLFFBQVcsVUFJbkIsSUFBSyxJQUFJL0ssRUFBSSxFQUFHQSxFQUFJcUwsRUFBTXZLLE9BQVFkLElBbkNYVSxFQW9DTDJLLEVBQU1yTCxHQW5DcEJrRixTQUFTQyxjQUFjLElBQU16RSxFQUFTLElBQUc0SyxpQkFBaUI1SyxFQUFjLFFBQUdBLEVBQWUsVUFEOUYsSUFBdUJBLENBcUMzQixDRHZDMEMsR0FJMUMsRUVFQTBFLE9BQU9rRyxpQkFBaUIsUUFBUSxLQUw1QixJQUFtQlQsZ0JBS3FCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL3NyYy9jc3MvQ29tbW9uL2FuaW1hdGlvbnMuY3NzIiwid2VicGFjazovL29kaW5fdG9kb19saXN0Ly4vc3JjL2Nzcy9Db21tb24vY29tbW9uQ2xhc3Nlcy5jc3MiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9zcmMvY3NzL0NvbW1vbi9nbG9iYWwuY3NzIiwid2VicGFjazovL29kaW5fdG9kb19saXN0Ly4vc3JjL2Nzcy9Db21tb24vc3R5bGVSZXNldC5jc3MiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9zcmMvY3NzL2NvbnRhaW5lcnMuY3NzIiwid2VicGFjazovL29kaW5fdG9kb19saXN0Ly4vc3JjL2Nzcy9sZWZ0Q29udGFpbmVyLmNzcyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL3NyYy9jc3MvbWFpbkhlYWRlci5jc3MiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9zcmMvY3NzL3JpZ2h0Q29udGFpbmVyLmNzcyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL3NyYy9jc3Mvc3R5bGUuY3NzIiwid2VicGFjazovL29kaW5fdG9kb19saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL29kaW5fdG9kb19saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL29kaW5fdG9kb19saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL29kaW5fdG9kb19saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL29kaW5fdG9kb19saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3Qvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL29kaW5fdG9kb19saXN0Ly4vc3JjL2Nzcy9zdHlsZS5jc3M/OWZjZCIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL3NyYy9wcm9qZWN0c01lbnVEb20uanMiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9zcmMvZG9tQ29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly9vZGluX3RvZG9fbGlzdC8uL3NyYy9ldmVudHNDb250cm9sbGVyLmpzIiwid2VicGFjazovL29kaW5fdG9kb19saXN0Ly4vc3JjL2V2ZW50SGFuZGxlcnMuanMiLCJ3ZWJwYWNrOi8vb2Rpbl90b2RvX2xpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuYnV0dG9uU3dpbmcge1xcbiAgICB0cmFuc2l0aW9uOiAxcztcXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG59XFxuXFxuLmludmVydENvbG9yIHtcXG4gICAgZmlsdGVyOiBpbnZlcnQoMSk7XFxuICAgIHRyYW5zaXRpb246IDJzO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL0NvbW1vbi9hbmltYXRpb25zLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGNBQWM7SUFDZCx5QkFBeUI7SUFDekIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmJ1dHRvblN3aW5nIHtcXG4gICAgdHJhbnNpdGlvbjogMXM7XFxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxufVxcblxcbi5pbnZlcnRDb2xvciB7XFxuICAgIGZpbHRlcjogaW52ZXJ0KDEpO1xcbiAgICB0cmFuc2l0aW9uOiAycztcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmZyb3N0ZWRHbGFzc0JhY2tncm91bmQge1xcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMjBweCk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUsIDIxLCAzMCwgMC44KTtcXG4gICAgYm94LXNoYWRvdzogMCAxcHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3MvQ29tbW9uL2NvbW1vbkNsYXNzZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLHVDQUF1QztJQUN2QywwQ0FBMEM7SUFDMUMsMENBQTBDO0FBQzlDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mcm9zdGVkR2xhc3NCYWNrZ3JvdW5kIHtcXG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDIwcHgpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1LCAyMSwgMzAsIDAuOCk7XFxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY29tbW9uQ2xhc3Nlcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzFfX18gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hbmltYXRpb25zLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMl9fXyBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlUmVzZXQuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMl9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxuXFx0LS14U21QYWRkaW5nOiAwLjR2dztcXG5cXHQtLXNtUGFkZGluZzogMC44dnc7XFxuXFx0LS1tZWRQYWRkaW5nOiAxdnc7XFxuXFx0LS1sZ1BhZGRpbmc6IDEuNXZ3O1xcblxcdC0teExnUGFkZGluZzogMi4ydnc7XFxuXFxuXFx0LS1tYWluQ29sb3I6ICMyMDEyM2E7XFxuXFx0LS1jb2xvcldoaXRlOiAjZWVlO1xcblxcdC0tY29sb3JCbGFjazogIzA2MDYwNjtcXG5cXG5cXHQtLWFjY2VudENvbG9yMTogcmdiKDM0LDM0LDM0KTtcXG5cXHQtLWFjY2VudENvbG9yMjogcmdiKDQxLDQxLDQxKTtcXG5cXHQtLWFjY2VudENvbG9yMzogcmdiKDc2LCA1NiwgNTYpO1xcblxcdC0tYWNjZW50Q29sb3I0OiByZ2IoNzcsNzcsNzcpO1xcblxcdC0tYWNjZW50Q29sb3I1OiByZ2JhKDY2LDY2LDY2LCAwLjgpO1xcblxcdFxcblxcdC0tY29sb3JOb3RpY2U6IG9yYW5nZXJlZDtcXG5cXHQtLWNvbG9ySW1wb3J0YW50OiByZ2IoMjQ2LCAyNTUsIDApO1xcblxcblxcdC0tZm9udExpZ2h0OiAjZWVlO1xcblxcdC0tZm9udERhcms6ICMwNjA2MDY7XFxuXFxuXFx0LS1zbVJvdW5kOiAxMHB4O1xcblxcdC0tbWVkUm91bmQ6IGNhbGMoKHZhcigtLXNtUm91bmQpICogMikpO1xcblxcdC0tbGdSb3VuZDogY2FsYygodmFyKC0tbWVkUm91bmQpICogMikpO1xcblxcblxcdC0tc21Cb3JkZXI6IDFweDtcXG5cXHQtLW1lZEJvcmRlcjogY2FsYygodmFyKC0tc21Cb3JkZXIpICogMikpO1xcblxcdC0tbGdCb3JkZXI6IGNhbGMoKHZhcigtLW1lZEJvcmRlcikgKiAyKSk7XFxuXFx0LS14bGdCb3JkZXI6IGNhbGMoKHZhcigtLWxnQm9yZGVyKSAqIDIpKTtcXG5cXG5cXHQtLXJvdW5kQm9yZGVyOiB2YXIoLS1sZ1JvdW5kKTtcXG5cXHQtLWNpcmNsZUJvcmRlcjogNTAlO1xcblxcblxcdC0tYm94U2hhZG93MTogcmdiYSgwLCAwLCAwLCAwLjE2KSAwcHggM3B4IDZweCwgcmdiYSgwLCAwLCAwLCAwLjIzKSAwcHggM3B4IDZweDtcXG5cXHQtLWJveFNoYWRvdzI6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNikgMHB4IDFweCAzcHgsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yMykgMHB4IDFweCAzcHg7XFxuXFx0LS1ib3hTaGFkb3czOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgMHB4IDBweCAwcHggMXB4IGluc2V0LCByZ2JhKDAsIDAsIDAsIDAuOSkgMHB4IDBweCAwcHggMXB4OztcXG5cXG5cXHQtLXRleHRTaGFkb3cxOiAycHggMnB4IDNweCByZ2JhKDAsMCwwLDAuOCk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3MvQ29tbW9uL2dsb2JhbC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBSUE7Q0FDQyxtQkFBbUI7Q0FDbkIsa0JBQWtCO0NBQ2xCLGlCQUFpQjtDQUNqQixrQkFBa0I7Q0FDbEIsbUJBQW1COztDQUVuQixvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLHFCQUFxQjs7Q0FFckIsNkJBQTZCO0NBQzdCLDZCQUE2QjtDQUM3QiwrQkFBK0I7Q0FDL0IsNkJBQTZCO0NBQzdCLG1DQUFtQzs7Q0FFbkMsd0JBQXdCO0NBQ3hCLGtDQUFrQzs7Q0FFbEMsaUJBQWlCO0NBQ2pCLG1CQUFtQjs7Q0FFbkIsZUFBZTtDQUNmLHNDQUFzQztDQUN0QyxzQ0FBc0M7O0NBRXRDLGVBQWU7Q0FDZix3Q0FBd0M7Q0FDeEMsd0NBQXdDO0NBQ3hDLHdDQUF3Qzs7Q0FFeEMsNkJBQTZCO0NBQzdCLG1CQUFtQjs7Q0FFbkIsOEVBQThFO0NBQzlFLDBGQUEwRjtDQUMxRixnR0FBZ0c7O0NBRWhHLDBDQUEwQztBQUMzQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybChcXFwiY29tbW9uQ2xhc3Nlcy5jc3NcXFwiKTtcXG5AaW1wb3J0IHVybChcXFwiYW5pbWF0aW9ucy5jc3NcXFwiKTtcXG5AaW1wb3J0IHVybChcXFwic3R5bGVSZXNldC5jc3NcXFwiKTtcXG5cXG46cm9vdCB7XFxuXFx0LS14U21QYWRkaW5nOiAwLjR2dztcXG5cXHQtLXNtUGFkZGluZzogMC44dnc7XFxuXFx0LS1tZWRQYWRkaW5nOiAxdnc7XFxuXFx0LS1sZ1BhZGRpbmc6IDEuNXZ3O1xcblxcdC0teExnUGFkZGluZzogMi4ydnc7XFxuXFxuXFx0LS1tYWluQ29sb3I6ICMyMDEyM2E7XFxuXFx0LS1jb2xvcldoaXRlOiAjZWVlO1xcblxcdC0tY29sb3JCbGFjazogIzA2MDYwNjtcXG5cXG5cXHQtLWFjY2VudENvbG9yMTogcmdiKDM0LDM0LDM0KTtcXG5cXHQtLWFjY2VudENvbG9yMjogcmdiKDQxLDQxLDQxKTtcXG5cXHQtLWFjY2VudENvbG9yMzogcmdiKDc2LCA1NiwgNTYpO1xcblxcdC0tYWNjZW50Q29sb3I0OiByZ2IoNzcsNzcsNzcpO1xcblxcdC0tYWNjZW50Q29sb3I1OiByZ2JhKDY2LDY2LDY2LCAwLjgpO1xcblxcdFxcblxcdC0tY29sb3JOb3RpY2U6IG9yYW5nZXJlZDtcXG5cXHQtLWNvbG9ySW1wb3J0YW50OiByZ2IoMjQ2LCAyNTUsIDApO1xcblxcblxcdC0tZm9udExpZ2h0OiAjZWVlO1xcblxcdC0tZm9udERhcms6ICMwNjA2MDY7XFxuXFxuXFx0LS1zbVJvdW5kOiAxMHB4O1xcblxcdC0tbWVkUm91bmQ6IGNhbGMoKHZhcigtLXNtUm91bmQpICogMikpO1xcblxcdC0tbGdSb3VuZDogY2FsYygodmFyKC0tbWVkUm91bmQpICogMikpO1xcblxcblxcdC0tc21Cb3JkZXI6IDFweDtcXG5cXHQtLW1lZEJvcmRlcjogY2FsYygodmFyKC0tc21Cb3JkZXIpICogMikpO1xcblxcdC0tbGdCb3JkZXI6IGNhbGMoKHZhcigtLW1lZEJvcmRlcikgKiAyKSk7XFxuXFx0LS14bGdCb3JkZXI6IGNhbGMoKHZhcigtLWxnQm9yZGVyKSAqIDIpKTtcXG5cXG5cXHQtLXJvdW5kQm9yZGVyOiB2YXIoLS1sZ1JvdW5kKTtcXG5cXHQtLWNpcmNsZUJvcmRlcjogNTAlO1xcblxcblxcdC0tYm94U2hhZG93MTogcmdiYSgwLCAwLCAwLCAwLjE2KSAwcHggM3B4IDZweCwgcmdiYSgwLCAwLCAwLCAwLjIzKSAwcHggM3B4IDZweDtcXG5cXHQtLWJveFNoYWRvdzI6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNikgMHB4IDFweCAzcHgsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yMykgMHB4IDFweCAzcHg7XFxuXFx0LS1ib3hTaGFkb3czOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgMHB4IDBweCAwcHggMXB4IGluc2V0LCByZ2JhKDAsIDAsIDAsIDAuOSkgMHB4IDBweCAwcHggMXB4OztcXG5cXG5cXHQtLXRleHRTaGFkb3cxOiAycHggMnB4IDNweCByZ2JhKDAsMCwwLDAuOCk7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXFxuICAgdjIuMCB8IDIwMTEwMTI2XFxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcXG4qL1xcblxcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxcbmIsIHUsIGksIGNlbnRlcixcXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xcblxcdG1hcmdpbjogMDtcXG5cXHRwYWRkaW5nOiAwO1xcblxcdGJvcmRlcjogMDtcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxuXFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXFxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5ib2R5IHtcXG5cXHRsaW5lLW1pbi1oZWlnaHQ6IDE7XFxufVxcbm9sLCB1bCB7XFxuXFx0bGlzdC1zdHlsZTogbm9uZTtcXG59XFxuYmxvY2txdW90ZSwgcSB7XFxuXFx0cXVvdGVzOiBub25lO1xcbn1cXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcXG5xOmJlZm9yZSwgcTphZnRlciB7XFxuXFx0Y29udGVudDogJyc7XFxuXFx0Y29udGVudDogbm9uZTtcXG59XFxudGFibGUge1xcblxcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxuXFx0Ym9yZGVyLXNwYWNpbmc6IDA7XFxufVxcblxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3MvQ29tbW9uL3N0eWxlUmVzZXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOzs7Q0FHQzs7QUFFRDs7Ozs7Ozs7Ozs7OztDQWFDLFNBQVM7Q0FDVCxVQUFVO0NBQ1YsU0FBUztDQUNULHdCQUF3QjtDQUN4QixxQkFBcUI7QUFDdEI7QUFDQSxnREFBZ0Q7QUFDaEQ7O0NBRUMsY0FBYztBQUNmO0FBQ0E7Q0FDQyxrQkFBa0I7QUFDbkI7QUFDQTtDQUNDLGdCQUFnQjtBQUNqQjtBQUNBO0NBQ0MsWUFBWTtBQUNiO0FBQ0E7O0NBRUMsV0FBVztDQUNYLGFBQWE7QUFDZDtBQUNBO0NBQ0MseUJBQXlCO0NBQ3pCLGlCQUFpQjtBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xcbiAgIHYyLjAgfCAyMDExMDEyNlxcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXFxuKi9cXG5cXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcXG5iLCB1LCBpLCBjZW50ZXIsXFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcXG5cXHRtYXJnaW46IDA7XFxuXFx0cGFkZGluZzogMDtcXG5cXHRib3JkZXI6IDA7XFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcblxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xcbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcXG5cXHRkaXNwbGF5OiBibG9jaztcXG59XFxuYm9keSB7XFxuXFx0bGluZS1taW4taGVpZ2h0OiAxO1xcbn1cXG5vbCwgdWwge1xcblxcdGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcbmJsb2NrcXVvdGUsIHEge1xcblxcdHF1b3Rlczogbm9uZTtcXG59XFxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6ICcnO1xcblxcdGNvbnRlbnQ6IG5vbmU7XFxufVxcbnRhYmxlIHtcXG5cXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcblxcdGJvcmRlci1zcGFjaW5nOiAwO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbGVmdENvbnRhaW5lci5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzFfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yaWdodENvbnRhaW5lci5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIiNjb250ZW50ID4gI2xlZnRDb250YWluZXIsXFxuI2NvbnRlbnQgPiAjcmlnaHRDb250YWluZXIge1xcbiAgICBncmlkLXJvdzogMi8xMTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9jb250YWluZXJzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQTs7SUFFSSxjQUFjO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKFxcXCIuL2xlZnRDb250YWluZXIuY3NzXFxcIik7XFxuQGltcG9ydCB1cmwoXFxcIi4vcmlnaHRDb250YWluZXIuY3NzXFxcIik7XFxuXFxuI2NvbnRlbnQgPiAjbGVmdENvbnRhaW5lcixcXG4jY29udGVudCA+ICNyaWdodENvbnRhaW5lciB7XFxuICAgIGdyaWQtcm93OiAyLzExO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIjbGVmdENvbnRhaW5lciB7XFxuICAgIGdyaWQtY29sdW1uOiAxLzM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudENvbG9yMSk7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogdmFyKC0tbGdQYWRkaW5nKTtcXG59XFxuXFxuI2xlZnRDb250YWluZXIgPiBkaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IHZhcigtLXhTbVBhZGRpbmcpO1xcbiAgICBwYWRkaW5nOiB2YXIoLS1zbVBhZGRpbmcpIHZhcigtLW1lZFBhZGRpbmcpIHZhcigtLXNtUGFkZGluZyk7XFxufVxcblxcbiNsZWZ0Q29udGFpbmVyID4gZGl2ID4gZGl2LnByb2plY3RMaXN0IHtcXG4gICAgd2lkdGg6IDc1JTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgZ2FwOiB2YXIoLS1zbVBhZGRpbmcpO1xcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1yb3VuZEJvcmRlcik7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudENvbG9yNSk7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgcGFkZGluZzogdmFyKC0teFNtUGFkZGluZykgdmFyKC0tc21QYWRkaW5nKTtcXG59XFxuXFxuI2xlZnRDb250YWluZXIgPiBkaXYgPiAqOmZpcnN0LWNoaWxke1xcbiAgICBjb2xvcjogdmFyKC0tY29sb3JOb3RpY2UpO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbn1cXG5cXG4jbGVmdENvbnRhaW5lciA+IGRpdiA+IGRpdi5wcm9qZWN0TGlzdCA+ICoge1xcbiAgICBqdXN0aWZ5LXNlbGY6IGZsZXgtZW5kO1xcbiAgICBtYXJnaW46IDA7XFxuXFxufVxcbiNsZWZ0Q29udGFpbmVyID4gZGl2ID4gZGl2LnByb2plY3RMaXN0ID4gKjpsYXN0LWNoaWxke1xcbiAgICBjb2xvcjogdmFyKC0tY29sb3JJbXBvcnRhbnQpO1xcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcXG59XFxuXFxuI2xlZnRDb250YWluZXIgPiBkaXYgPiBkaXYuYWN0aXZlLFxcbiNsZWZ0Q29udGFpbmVyID4gZGl2ID4gZGl2LnByb2plY3RMaXN0OmhvdmVye1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnRDb2xvcjMpO1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS1ib3hTaGFkb3cxKTtcXG59XFxuXFxuI2xlZnRDb250YWluZXIgPiAjYnV0dG9ucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIG1hcmdpbi10b3A6IGF1dG87XFxuICAgIGp1c3RpZnktc2VsZjogZmxleC1lbmQ7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgZ2FwOiB2YXIoLS14U21QYWRkaW5nKTtcXG59XFxuXFxuI2xlZnRDb250YWluZXIgPiAjYnV0dG9ucyA+IHN2ZyB7XFxuICAgIHBhZGRpbmc6IHZhcigtLXhTbVBhZGRpbmcpO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZmlsbDp2YXIoLS1jb2xvcldoaXRlKTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4jbGVmdENvbnRhaW5lciA+ICNidXR0b25zID4gc3ZnOmhvdmVye1xcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xcbiAgICBmaWx0ZXI6IGludmVydCgwLjUpO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2xlZnRDb250YWluZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHFDQUFxQztJQUNyQyxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0Qiw0REFBNEQ7QUFDaEU7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsaUNBQWlDO0lBQ2pDLHFDQUFxQztJQUNyQyxlQUFlO0lBQ2YsMkNBQTJDO0FBQy9DOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsU0FBUzs7QUFFYjtBQUNBO0lBQ0ksNEJBQTRCO0lBQzVCLGlCQUFpQjtBQUNyQjs7QUFFQTs7SUFFSSxxQ0FBcUM7SUFDckMsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksMEJBQTBCO0lBQzFCLFdBQVc7SUFDWCxzQkFBc0I7SUFDdEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiI2xlZnRDb250YWluZXIge1xcbiAgICBncmlkLWNvbHVtbjogMS8zO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnRDb2xvcjEpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IHZhcigtLWxnUGFkZGluZyk7XFxufVxcblxcbiNsZWZ0Q29udGFpbmVyID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiB2YXIoLS14U21QYWRkaW5nKTtcXG4gICAgcGFkZGluZzogdmFyKC0tc21QYWRkaW5nKSB2YXIoLS1tZWRQYWRkaW5nKSB2YXIoLS1zbVBhZGRpbmcpO1xcbn1cXG5cXG4jbGVmdENvbnRhaW5lciA+IGRpdiA+IGRpdi5wcm9qZWN0TGlzdCB7XFxuICAgIHdpZHRoOiA3NSU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGdhcDogdmFyKC0tc21QYWRkaW5nKTtcXG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tcm91bmRCb3JkZXIpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnRDb2xvcjUpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHBhZGRpbmc6IHZhcigtLXhTbVBhZGRpbmcpIHZhcigtLXNtUGFkZGluZyk7XFxufVxcblxcbiNsZWZ0Q29udGFpbmVyID4gZGl2ID4gKjpmaXJzdC1jaGlsZHtcXG4gICAgY29sb3I6IHZhcigtLWNvbG9yTm90aWNlKTtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcXG59XFxuXFxuI2xlZnRDb250YWluZXIgPiBkaXYgPiBkaXYucHJvamVjdExpc3QgPiAqIHtcXG4gICAganVzdGlmeS1zZWxmOiBmbGV4LWVuZDtcXG4gICAgbWFyZ2luOiAwO1xcblxcbn1cXG4jbGVmdENvbnRhaW5lciA+IGRpdiA+IGRpdi5wcm9qZWN0TGlzdCA+ICo6bGFzdC1jaGlsZHtcXG4gICAgY29sb3I6IHZhcigtLWNvbG9ySW1wb3J0YW50KTtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxufVxcblxcbiNsZWZ0Q29udGFpbmVyID4gZGl2ID4gZGl2LmFjdGl2ZSxcXG4jbGVmdENvbnRhaW5lciA+IGRpdiA+IGRpdi5wcm9qZWN0TGlzdDpob3ZlcntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50Q29sb3IzKTtcXG4gICAgYm94LXNoYWRvdzogdmFyKC0tYm94U2hhZG93MSk7XFxufVxcblxcbiNsZWZ0Q29udGFpbmVyID4gI2J1dHRvbnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcbiAgICBqdXN0aWZ5LXNlbGY6IGZsZXgtZW5kO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGdhcDogdmFyKC0teFNtUGFkZGluZyk7XFxufVxcblxcbiNsZWZ0Q29udGFpbmVyID4gI2J1dHRvbnMgPiBzdmcge1xcbiAgICBwYWRkaW5nOiB2YXIoLS14U21QYWRkaW5nKTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGZpbGw6dmFyKC0tY29sb3JXaGl0ZSk7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuI2xlZnRDb250YWluZXIgPiAjYnV0dG9ucyA+IHN2Zzpob3ZlcntcXG4gICAgdHJhbnNpdGlvbjogMC4zcztcXG4gICAgZmlsdGVyOiBpbnZlcnQoMC41KTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiI21haW5IZWFkZXIge1xcbiAgICBncmlkLWNvbHVtbjogMS8xMTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50Q29sb3I0KTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbiNtYWluSGVhZGVyID4gaW1nIHtcXG4gICAgaGVpZ2h0OiA2NHB4O1xcbiAgICB3aWR0aDogYXV0bztcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9tYWluSGVhZGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixxQ0FBcUM7SUFDckMsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7QUFDZlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjbWFpbkhlYWRlciB7XFxuICAgIGdyaWQtY29sdW1uOiAxLzExO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnRDb2xvcjQpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICB3aWR0aDogMTAwJTtcXG59XFxuXFxuI21haW5IZWFkZXIgPiBpbWcge1xcbiAgICBoZWlnaHQ6IDY0cHg7XFxuICAgIHdpZHRoOiBhdXRvO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4uL2ltYWdlcy9iYWNrZ3JvdW5kLmpwZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9UnViaWsrRGlydCZkaXNwbGF5PXN3YXApO1wiXSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiI3JpZ2h0Q29udGFpbmVye1xcbiAgICBncmlkLWNvbHVtbjogMy8xMTtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gICAgZm9udC1mYW1pbHk6ICdSdWJpayBEaXJ0JywgY3Vyc2l2ZTtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbiNyaWdodENvbnRhaW5lciA+ICNpbm5lckNvbnRhaW5lciA+ICNwcm9qZWN0cyxcXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXZ7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogdmFyKC0tc21QYWRkaW5nKTtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbiNyaWdodENvbnRhaW5lciA+ICNpbm5lckNvbnRhaW5lciA+ICNwcm9qZWN0cyB7XFxuICAgIGdhcDogdmFyKC0teExnUGFkZGluZyk7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XFxufVxcblxcbiNyaWdodENvbnRhaW5lciA+ICNpbm5lckNvbnRhaW5lciA+ICNwcm9qZWN0cyA+IGRpdiA+IGgyLmxpc3RIZWFkZXJ7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXYgPiBkaXYucHJvamVjdHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogdmFyKC0tc21QYWRkaW5nKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50Q29sb3IyKTtcXG4gICAgcGFkZGluZzogdmFyKC0tc21QYWRkaW5nKTtcXG4gICAgd2lkdGg6IDUwJTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXYgPiBkaXYuZmluaXNoZWQge1xcbiAgICBvcGFjaXR5OiAuNDtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI3Byb2plY3RzID4gZGl2ID4gZGl2LnByb2plY3Q6aG92ZXIge1xcbiAgICBmaWx0ZXI6IGludmVydCgxKTtcXG4gICAgb3BhY2l0eTogMTtcXG59XFxuXFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51e1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDc1JTtcXG4gICAgcGFkZGluZzogdmFyKC0teExnUGFkZGluZyk7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XFxuICAgIG1hcmdpbi10b3A6IHZhcigtLXhMZ1BhZGRpbmcpO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjYWRkUHJvamVjdE1lbnUgPiBkaXYge1xcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogdmFyKC0tbWVkUGFkZGluZyk7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIG1hcmdpbjogdmFyKC0tbWVkUGFkZGluZykgMDtcXG4gICAgcGFkZGluZzogdmFyKC0tc21QYWRkaW5nKTtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51ID4gZGl2ID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51ID4gZGl2Omxhc3QtY2hpbGR7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICB3aWR0aDogMzUlO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjYWRkUHJvamVjdE1lbnUgPiBkaXYgPiAqIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3MvcmlnaHRDb250YWluZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLHlEQUFpRDtJQUNqRCw0QkFBNEI7SUFDNUIsc0JBQXNCO0lBQ3RCLGtDQUFrQztBQUN0Qzs7QUFFQTtJQUNJLGFBQWE7SUFDYixXQUFXO0lBQ1gsWUFBWTtJQUNaLHVCQUF1QjtBQUMzQjs7QUFFQTs7SUFFSSxTQUFTO0lBQ1QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixxQkFBcUI7SUFDckIscUNBQXFDO0lBQ3JDLHlCQUF5QjtJQUN6QixVQUFVO0lBQ1YsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixVQUFVO0FBQ2Q7OztBQUdBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsVUFBVTtJQUNWLDBCQUEwQjtJQUMxQixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsMkJBQTJCO0lBQzNCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsVUFBVTtBQUNkOztBQUVBO0lBQ0ksV0FBVztBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJ1YmlrK0RpcnQmZGlzcGxheT1zd2FwJyk7XFxuXFxuI3JpZ2h0Q29udGFpbmVye1xcbiAgICBncmlkLWNvbHVtbjogMy8xMTtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuLi9pbWFnZXMvYmFja2dyb3VuZC5qcGdcXFwiKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gICAgZm9udC1mYW1pbHk6ICdSdWJpayBEaXJ0JywgY3Vyc2l2ZTtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbiNyaWdodENvbnRhaW5lciA+ICNpbm5lckNvbnRhaW5lciA+ICNwcm9qZWN0cyxcXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXZ7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogdmFyKC0tc21QYWRkaW5nKTtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbiNyaWdodENvbnRhaW5lciA+ICNpbm5lckNvbnRhaW5lciA+ICNwcm9qZWN0cyB7XFxuICAgIGdhcDogdmFyKC0teExnUGFkZGluZyk7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XFxufVxcblxcbiNyaWdodENvbnRhaW5lciA+ICNpbm5lckNvbnRhaW5lciA+ICNwcm9qZWN0cyA+IGRpdiA+IGgyLmxpc3RIZWFkZXJ7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXYgPiBkaXYucHJvamVjdHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogdmFyKC0tc21QYWRkaW5nKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50Q29sb3IyKTtcXG4gICAgcGFkZGluZzogdmFyKC0tc21QYWRkaW5nKTtcXG4gICAgd2lkdGg6IDUwJTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXYgPiBkaXYuZmluaXNoZWQge1xcbiAgICBvcGFjaXR5OiAuNDtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI3Byb2plY3RzID4gZGl2ID4gZGl2LnByb2plY3Q6aG92ZXIge1xcbiAgICBmaWx0ZXI6IGludmVydCgxKTtcXG4gICAgb3BhY2l0eTogMTtcXG59XFxuXFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51e1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDc1JTtcXG4gICAgcGFkZGluZzogdmFyKC0teExnUGFkZGluZyk7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XFxuICAgIG1hcmdpbi10b3A6IHZhcigtLXhMZ1BhZGRpbmcpO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjYWRkUHJvamVjdE1lbnUgPiBkaXYge1xcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogdmFyKC0tbWVkUGFkZGluZyk7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIG1hcmdpbjogdmFyKC0tbWVkUGFkZGluZykgMDtcXG4gICAgcGFkZGluZzogdmFyKC0tc21QYWRkaW5nKTtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51ID4gZGl2ID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51ID4gZGl2Omxhc3QtY2hpbGR7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICB3aWR0aDogMzUlO1xcbn1cXG5cXG4jcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjYWRkUHJvamVjdE1lbnUgPiBkaXYgPiAqIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Db21tb24vZ2xvYmFsLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbnRhaW5lcnMuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbkhlYWRlci5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90byZkaXNwbGF5PXN3YXApO1wiXSk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1MYXRvOndnaHRANDAwJmRpc3BsYXk9c3dhcCk7XCJdKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJ1YmlrK0RpcnQmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiaHRtbCxcXG5ib2R5IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBmb250LWZhbWlseTogXFxcIkxhdG9cXFwiO1xcbiAgICBmb250LWZhbWlseTogJ1J1YmlrIERpcnQnLCBjdXJzaXZlO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkNvbG9yKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGNvbG9yOiB2YXIoLS1mb250TGlnaHQpO1xcbn1cXG5cXG4jY29udGVudCB7XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIGhlaWdodDogOTAlO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMWZyKTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLWJveFNoYWRvdzEpO1xcbn1cXG5cXG5idXR0b24ge1xcbiAgICBmb250LXNpemU6IDEycHg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tcm91bmRCb3JkZXIpO1xcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBwYWRkaW5nOiB2YXIoLS14U21QYWRkaW5nKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiAxNjAwcHgpIHsgXFxuICAgICNjb250ZW50ID4gI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI3Byb2plY3RzID4gZGl2ID4gZGl2LnByb2plY3R7XFxuICAgICAgICB3aWR0aDogNzUlO1xcbiAgICB9XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOjYwMHB4KSB7IFxcbiAgICAqIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogc21hbGw7XFxuICAgIH1cXG5cXG4gICAgI2NvbnRlbnQgPiAjdG9wSGVhZGVyID4gaW1nIHtcXG4gICAgICAgIGhlaWdodDogNTBweDtcXG4gICAgfVxcbiAgICAjY29udGVudCB7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgfVxcbiAgICAjbGVmdENvbnRhaW5lciB7XFxuICAgICAgICBncmlkLWNvbHVtbjogMS80O1xcbiAgICB9XFxuICAgICNjb250ZW50ID4gI3JpZ2h0Q29udGFpbmVye1xcbiAgICAgICAgZ3JpZC1jb2x1bW46IDQvMTE7XFxuICAgIH1cXG5cXG4gICAgI2NvbnRlbnQgPiAjcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXYgPiBkaXYucHJvamVjdHtcXG4gICAgICAgIHdpZHRoOiA5NSU7XFxuICAgICAgICBwYWRkaW5nOiAwO1xcbiAgICB9XFxuXFxuICAgICNjb250ZW50ID4gI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51IHtcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xcbiAgICAgICAgbWFyZ2luOiAwO1xcbiAgICAgICAgcGFkZGluZzogMDtcXG4gICAgfVxcblxcbiAgICAjYnV0dG9uc3tcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIH1cXG4gfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3Mvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQVFBOztJQUVJLFNBQVM7SUFDVCxVQUFVO0lBQ1YsWUFBWTtJQUNaLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0ksa0NBQWtDO0lBQ2xDLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsYUFBYTtJQUNiLG1DQUFtQztJQUNuQyxzQ0FBc0M7SUFDdEMsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGVBQWU7SUFDZixpQ0FBaUM7SUFDakMseUJBQXlCO0lBQ3pCLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJO1FBQ0ksVUFBVTtJQUNkO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLGdCQUFnQjtJQUNwQjs7SUFFQTtRQUNJLFlBQVk7SUFDaEI7SUFDQTtRQUNJLFlBQVk7UUFDWixXQUFXO0lBQ2Y7SUFDQTtRQUNJLGdCQUFnQjtJQUNwQjtJQUNBO1FBQ0ksaUJBQWlCO0lBQ3JCOztJQUVBO1FBQ0ksVUFBVTtRQUNWLFVBQVU7SUFDZDs7SUFFQTtRQUNJLFdBQVc7UUFDWCxZQUFZO1FBQ1osU0FBUztRQUNULFVBQVU7SUFDZDs7SUFFQTtRQUNJLG1CQUFtQjtJQUN2QjtDQUNIXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKFxcXCIuL0NvbW1vbi9nbG9iYWwuY3NzXFxcIik7XFxuQGltcG9ydCB1cmwoXFxcIi4vY29udGFpbmVycy5jc3NcXFwiKTtcXG5AaW1wb3J0IHVybChcXFwiLi9tYWluSGVhZGVyLmNzc1xcXCIpO1xcblxcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90byZkaXNwbGF5PXN3YXAnKTtcXG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1MYXRvOndnaHRANDAwJmRpc3BsYXk9c3dhcCcpO1xcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJ1YmlrK0RpcnQmZGlzcGxheT1zd2FwJyk7XFxuXFxuaHRtbCxcXG5ib2R5IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBmb250LWZhbWlseTogXFxcIkxhdG9cXFwiO1xcbiAgICBmb250LWZhbWlseTogJ1J1YmlrIERpcnQnLCBjdXJzaXZlO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkNvbG9yKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGNvbG9yOiB2YXIoLS1mb250TGlnaHQpO1xcbn1cXG5cXG4jY29udGVudCB7XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIGhlaWdodDogOTAlO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMWZyKTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLWJveFNoYWRvdzEpO1xcbn1cXG5cXG5idXR0b24ge1xcbiAgICBmb250LXNpemU6IDEycHg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tcm91bmRCb3JkZXIpO1xcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBwYWRkaW5nOiB2YXIoLS14U21QYWRkaW5nKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiAxNjAwcHgpIHsgXFxuICAgICNjb250ZW50ID4gI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI3Byb2plY3RzID4gZGl2ID4gZGl2LnByb2plY3R7XFxuICAgICAgICB3aWR0aDogNzUlO1xcbiAgICB9XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOjYwMHB4KSB7IFxcbiAgICAqIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogc21hbGw7XFxuICAgIH1cXG5cXG4gICAgI2NvbnRlbnQgPiAjdG9wSGVhZGVyID4gaW1nIHtcXG4gICAgICAgIGhlaWdodDogNTBweDtcXG4gICAgfVxcbiAgICAjY29udGVudCB7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgfVxcbiAgICAjbGVmdENvbnRhaW5lciB7XFxuICAgICAgICBncmlkLWNvbHVtbjogMS80O1xcbiAgICB9XFxuICAgICNjb250ZW50ID4gI3JpZ2h0Q29udGFpbmVye1xcbiAgICAgICAgZ3JpZC1jb2x1bW46IDQvMTE7XFxuICAgIH1cXG5cXG4gICAgI2NvbnRlbnQgPiAjcmlnaHRDb250YWluZXIgPiAjaW5uZXJDb250YWluZXIgPiAjcHJvamVjdHMgPiBkaXYgPiBkaXYucHJvamVjdHtcXG4gICAgICAgIHdpZHRoOiA5NSU7XFxuICAgICAgICBwYWRkaW5nOiAwO1xcbiAgICB9XFxuXFxuICAgICNjb250ZW50ID4gI3JpZ2h0Q29udGFpbmVyID4gI2lubmVyQ29udGFpbmVyID4gI2FkZFByb2plY3RNZW51IHtcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xcbiAgICAgICAgbWFyZ2luOiAwO1xcbiAgICAgICAgcGFkZGluZzogMDtcXG4gICAgfVxcblxcbiAgICAjYnV0dG9uc3tcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIH1cXG4gfVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBkb21Db250cm9sbGVyIGZyb20gXCIuL2RvbUNvbnRyb2xsZXJcIjtcblxuZnVuY3Rpb24gcHJvamVjdHNNZW51RG9tKCkge1xuICAgIGNvbnN0IHByb2plY3RzTGlzdCA9IChwcm9qZWN0c01lbnUpID0+IHtcbiAgICAgICAgY29uc3Qgc2V0TGlzdCA9IChwcm9qZWN0TGlzdCkgPT4gcHJvamVjdHNMaXN0Lmxpc3QgPSBwcm9qZWN0TGlzdDtcbiAgICAgICAgY29uc3QgZ2V0TGlzdCA9ICgpID0+IHtyZXR1cm4gcHJvamVjdHNMaXN0Lmxpc3R9O1xuICAgICAgICByZXR1cm4ge3NldExpc3QsIGdldExpc3R9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZE5ld1Byb2plY3RNZW51KCkge1xuICAgICAgICBjb25zdCBwYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lubmVyQ29udGFpbmVyXCIpO1xuICAgICAgICBjb25zdCBhZGRQcm9qZWN0TWVudUlkID0gXCJhZGRQcm9qZWN0TWVudVwiO1xuXG4gICAgICAgIGNvbnN0IGNyZWF0ZVByb2plY3RzTWVudSA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFkZFByb2plY3RNZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGNvbnN0IGFkZFByb2plY3RIZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDJcIik7XG4gICAgICAgICAgICBjb25zdCBidXR0b25zRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGNvbnN0IGFkZFByb2plY3RCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICAgICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcblxuICAgICAgICAgICAgYWRkUHJvamVjdEhlYWRlci50ZXh0Q29udGVudCA9IFwiQWRkIGEgbmV3IHByb2plY3RcIjtcbiAgICAgICAgICAgIGFkZFByb2plY3RCdG4udGV4dENvbnRlbnQgPSBcIkFkZCBQcm9qZWN0XCI7XG4gICAgICAgICAgICBjYW5jZWxCdG4udGV4dENvbnRlbnQgPSBcIkNhbmNlbFwiO1xuICAgICAgICAgICAgYnV0dG9uc0Rpdi5hcHBlbmRDaGlsZChhZGRQcm9qZWN0QnRuKTtcbiAgICAgICAgICAgIGJ1dHRvbnNEaXYuYXBwZW5kQ2hpbGQoY2FuY2VsQnRuKTtcbiAgICAgICAgICAgIGFkZFByb2plY3RNZW51LmlkID0gYWRkUHJvamVjdE1lbnVJZDtcblxuICAgICAgICAgICAgY29uc3QgY3JlYXRlSW5wdXQgPSAoaW5wdXRzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5wdXRzRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnB1dFZhbHMgPSBpbnB1dHNbaV07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlucHV0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW5wdXRMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXRMYWJlbC5mb3IgPSBpbnB1dFZhbHNbXCJuYW1lXCJdO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dExhYmVsLnRleHRDb250ZW50ID0gaW5wdXRWYWxzW1widGV4dFwiXTtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXREaXYuYXBwZW5kQ2hpbGQoaW5wdXRMYWJlbCk7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0LnR5cGUgPSBpbnB1dFZhbHNbXCJ0eXBlXCJdO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5pZCA9IGlucHV0VmFsc1tcImlkXCJdO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5uYW1lID0gaW5wdXRWYWxzW1wibmFtZVwiXTtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXREaXYuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dHNEaXYuYXBwZW5kQ2hpbGQoaW5wdXREaXYpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXRzRGl2O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBpbnB1dHMgPSBbXG4gICAgICAgICAgICAgICAgeyBcInR5cGVcIjogXCJ0ZXh0XCIsIFwiaWRcIjogXCJwcm9qZWN0TmFtZVwiLCBcIm5hbWVcIjogXCJwcm9qZWN0TmFtZVwiLCBcInRleHRcIjogXCJOYW1lXCIgfSxcbiAgICAgICAgICAgICAgICB7IFwidHlwZVwiOiBcInRleHRcIiwgXCJpZFwiOiBcInN1YmplY3RcIiwgXCJuYW1lXCI6IFwic3ViamVjdFwiLCBcInRleHRcIjogXCJTdWJqZWN0XCIgfSxcbiAgICAgICAgICAgICAgICB7IFwidHlwZVwiOiBcInRleHRcIiwgXCJpZFwiOiBcImRlc2NyaXB0aW9uXCIsIFwibmFtZVwiOiBcImRlc2NyaXB0aW9uXCIsIFwidGV4dFwiOiBcImRlc2NyaXB0aW9uXCIgfSxcbiAgICAgICAgICAgICAgICB7IFwidHlwZVwiOiBcImRhdGVcIiwgXCJpZFwiOiBcImRhdGVcIiwgXCJuYW1lXCI6IFwiZGF0ZVwiLCBcInRleHRcIjogXCJEYXRlXCIgfVxuICAgICAgICAgICAgXVxuXG4gICAgICAgICAgICBjb25zdCBpbnB1dHNEaXYgPSBjcmVhdGVJbnB1dChpbnB1dHMpO1xuICAgICAgICAgICAgYWRkUHJvamVjdE1lbnUuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEhlYWRlcik7XG4gICAgICAgICAgICBhZGRQcm9qZWN0TWVudS5hcHBlbmRDaGlsZChpbnB1dHNEaXYpO1xuICAgICAgICAgICAgYWRkUHJvamVjdE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uc0Rpdik7XG4gICAgICAgICAgICByZXR1cm4gYWRkUHJvamVjdE1lbnU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB0aGUgYWRkIHByb2plY3QgbWVudSBpcyBub3QgZGlzcGxheWVkLCBjcmVhdGUgYW5kIGRpc3BsYXkgaXRcbiAgICAgICAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHthZGRQcm9qZWN0TWVudUlkfWApKSB7XG4gICAgICAgICAgICBwcm9qZWN0c0xpc3QoKS5zZXRMaXN0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdHNcIikpO1xuICAgICAgICAgICAgZG9tQ29udHJvbGxlcigpLmFkZEVsZW1lbnQoY3JlYXRlUHJvamVjdHNNZW51KCksIHBhcmVudCk7XG4gICAgICAgICAgICBkb21Db250cm9sbGVyKCkucmVtb3ZlRWxlbWVudChwcm9qZWN0c0xpc3QoKS5nZXRMaXN0KCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIGRvbUNvbnRyb2xsZXIoKS5yZW1vdmVFbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2FkZFByb2plY3RNZW51SWR9YCkpO1xuICAgICAgICAgICAgZG9tQ29udHJvbGxlcigpLmFkZEVsZW1lbnQocHJvamVjdHNMaXN0KCkuZ2V0TGlzdCgpLCBwYXJlbnQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgYWRkTmV3UHJvamVjdE1lbnUgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBwcm9qZWN0c01lbnVEb207IiwiaW1wb3J0IHByb2plY3RzTWVudURvbSBmcm9tIFwiLi9wcm9qZWN0c01lbnVEb21cIjtcblxuZnVuY3Rpb24gZG9tQ29udHJvbGxlcigpIHtcbiAgICBjb25zdCBtZW51RG9tID0gcHJvamVjdHNNZW51RG9tKCk7XG5cbiAgICBjb25zdCByZW1vdmVFbGVtZW50ID0gKGVsZW1lbnQpID0+IGVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTtcbiAgICBjb25zdCBhZGRFbGVtZW50ID0gKGVsZW1lbnQsIHBhcmVudCkgPT4gcGFyZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgIGNvbnN0IGFkZE5ld1Byb2plY3RNZW51ID0gKCkgPT4gbWVudURvbS5hZGROZXdQcm9qZWN0TWVudSgpO1xuXG4gICAgcmV0dXJuIHsgYWRkTmV3UHJvamVjdE1lbnUsIHJlbW92ZUVsZW1lbnQsIGFkZEVsZW1lbnQgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBkb21Db250cm9sbGVyOyIsImltcG9ydCBjcmVhdGVFdmVudEhhbmRsZXJzIGZyb20gJy4vZXZlbnRIYW5kbGVycy5qcydcblxuZnVuY3Rpb24gZXZlbnRzQ29udHJvbGxlcigpIHtcbiAgICBjb25zdCBjcmVhdGVIYW5kbGVycyA9ICgpID0+IHsgcmV0dXJuIGNyZWF0ZUV2ZW50SGFuZGxlcnMoKTsgfVxuICAgIC8vIGNvbnN0IHJlc2l6ZSA9IChlbGVtZW50SUQpID0+ICQoJyNjb250ZW50JykucmVzaXphYmxlKCkuZHJhZ2dhYmxlKCk7IFxuICAgIFxuICAgIHJldHVybiB7IGNyZWF0ZUhhbmRsZXJzfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZXZlbnRzQ29udHJvbGxlcjsiLCJpbXBvcnQgZG9tQ29udHJvbGxlciBmcm9tICcuL2RvbUNvbnRyb2xsZXInXG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50SGFuZGxlcnMoKSB7XG4gICAgY29uc3QgZG9tQ29udHJvbCA9IGRvbUNvbnRyb2xsZXIoKTtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUhhbmRsZXIoaXRlbSkge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiICsgaXRlbVtcImlkXCJdKS5hZGRFdmVudExpc3RlbmVyKGl0ZW1bXCJ0cmlnZ2VyXCJdLCBpdGVtW1wiY2FsbGJhY2tcIl0pXG4gICAgfVxuXG4gICAgY29uc3QgdG9nZ2xlQ2xhc3MgPSAoZWxlbWVudElELCBjbGFzc05hbWUpID0+IHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2VsZW1lbnRJRH1gKTtcbiAgICAgICAgIShlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpKSA/IGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpIDogZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG4gICAgfVxuXG4gICAgY29uc3QgaXRlbXMgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwiaWRcIjogXCJkYXJrbW9kZUJ0blwiLFxuICAgICAgICAgICAgXCJjYWxsYmFja1wiOiAoKSA9PiB0b2dnbGVDbGFzcyhcImNvbnRlbnRcIiwgXCJpbnZlcnRDb2xvclwiKSxcbiAgICAgICAgICAgIFwidHJpZ2dlclwiOiBcImNsaWNrXCJcbiAgICAgICAgfSxcblxuICAgICAgICB7XG4gICAgICAgICAgICBcImlkXCI6IFwiZGFya21vZGVCdG5cIixcbiAgICAgICAgICAgIFwiY2FsbGJhY2tcIjogKCkgPT4gdG9nZ2xlQ2xhc3MoXCJkYXJrbW9kZUJ0blwiLCBcImJ1dHRvblN3aW5nXCIpLFxuICAgICAgICAgICAgXCJ0cmlnZ2VyXCI6IFwiY2xpY2tcIlxuICAgICAgICB9LFxuXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwiaWRcIjogXCJhZGRQcm9qZWN0QnRuXCIsXG4gICAgICAgICAgICBcImNhbGxiYWNrXCI6ICgpID0+IGRvbUNvbnRyb2wuYWRkTmV3UHJvamVjdE1lbnUoKSxcbiAgICAgICAgICAgIFwidHJpZ2dlclwiOiBcImNsaWNrXCJcbiAgICAgICAgfSxcblxuICAgICAgICB7XG4gICAgICAgICAgICBcImlkXCI6IFwiYWRkUHJvamVjdEJ0blwiLFxuICAgICAgICAgICAgXCJjYWxsYmFja1wiOiAoKSA9PiB0b2dnbGVDbGFzcyhcImFkZFByb2plY3RCdG5cIiwgXCJidXR0b25Td2luZ1wiKSxcbiAgICAgICAgICAgIFwidHJpZ2dlclwiOiBcImNsaWNrXCJcbiAgICAgICAgfVxuICAgIF1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspXG4gICAgICAgIGNyZWF0ZUhhbmRsZXIoaXRlbXNbaV0pXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVFdmVudEhhbmRsZXJzOyIsImltcG9ydCAnLi9jc3Mvc3R5bGUuY3NzJztcbmltcG9ydCBldmVudHNDb250cm9sbGVyIGZyb20gJy4vZXZlbnRzQ29udHJvbGxlci5qcyc7XG5pbXBvcnQgZG9tQ29udHJvbGxlciBmcm9tICcuL2RvbUNvbnRyb2xsZXInO1xuZnVuY3Rpb24gbWFpbigpe1xuICAgIGV2ZW50c0NvbnRyb2xsZXIoKS5jcmVhdGVIYW5kbGVycygpO1xuICAgIC8vY29uc3QgZG9tQ29udHJvbCA9IGRvbUNvbnRyb2xsZXIoKTtcbiAgICAvL2RvbUNvbnRyb2wuYWRkTmV3UHJvamVjdE1lbnUoKTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IG1haW4oKSk7XG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImkiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJtZW51RG9tIiwicHJvamVjdHNMaXN0IiwicHJvamVjdHNNZW51Iiwic2V0TGlzdCIsInByb2plY3RMaXN0IiwiZ2V0TGlzdCIsImFkZE5ld1Byb2plY3RNZW51IiwicGFyZW50IiwicmVtb3ZlRWxlbWVudCIsImFkZEVsZW1lbnQiLCJhZGRQcm9qZWN0TWVudSIsImFkZFByb2plY3RIZWFkZXIiLCJidXR0b25zRGl2IiwiYWRkUHJvamVjdEJ0biIsImNhbmNlbEJ0biIsInRleHRDb250ZW50IiwiaW5wdXRzRGl2IiwiaW5wdXRzIiwiaW5wdXRWYWxzIiwiaW5wdXREaXYiLCJpbnB1dExhYmVsIiwiZm9yIiwiaW5wdXQiLCJ0eXBlIiwibmFtZSIsImNyZWF0ZUlucHV0IiwiY3JlYXRlUHJvamVjdHNNZW51IiwiY3JlYXRlSGFuZGxlcnMiLCJkb21Db250cm9sIiwidG9nZ2xlQ2xhc3MiLCJlbGVtZW50SUQiLCJjbGFzc05hbWUiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImFkZCIsIml0ZW1zIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=