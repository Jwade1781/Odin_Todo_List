(()=>{"use strict";var n,t,r,e,o,a,A,i,s,l,C,d,c,m,p={327:(n,t,r)=>{r.d(t,{Z:()=>i});var e=r(537),o=r.n(e),a=r(645),A=r.n(a)()(o());A.push([n.id,".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n.invertColor:hover{\n\tanimation: invertColorAnimation 0.3s forwards;\n\tanimation-iteration-count: 1; \n}\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}\n\n.fadeIn {\n    animation: fadeInAnimation 0.5s linear forwards;\n}\n\n.fadeOut {\n    animation: fadeOutAnimation 0.5s linear forwards;\n}\n\n\n@keyframes fadeBlackAnimation {\n    100% {\n        color: var(--fontColorLight);\n        background-color: var(--fontColorDark);\n    }\n}\n\n@keyframes bounceAnimation {\n    100% {\n        margin-top: var(--paddingSm);\n    }\n}\n\n@keyframes fadeInAnimation {\n    0% {\n        filter: blur(2px);\n        filter: brightness(0);\n    }\n\n    100% {\n        filter: blur(0px);\n\t\tfilter: brightness(1);\n        opacity: 1.0;\n    }\n}\n\n@keyframes fadeOutAnimation {\n    0% {\n        filter: blur(0px);\n\t\tfilter: brightness(0.5);\n        opacity: 1.0;\n    }\n\n    100% {\n        filter: blur(2px);\n\t\tfilter: brightness(0);\n        opacity: 0;\n    }\n}\n\n\n.slideOut {\n    /*animation: slideOutAnimation 0.7s linear forwards;*/\n\tanimation: fadeOutAnimation 0.3s linear forwards;\n}\n\n.slideIn {\n\tanimation: fadeInAnimation 1s linear forwards;\n    /*animation: slideInAnimation 1.0s linear forwards;*/\n}\n\n@keyframes slideOutAnimation {\n\t100% {\n\t\tfilter: contrast(1.3);\n\t\ttransform: translate(100%);\n\t}\n}\n\n@keyframes slideInAnimation{\n\t0% {\n\t\ttransform: translate(100%);\n\t}\n\t100% {\n\t\tfilter: contrast(1);\n\t\ttransform: translate(0);\n\t}\n}","",{version:3,sources:["webpack://./src/css/Common/animations.css"],names:[],mappings:"AAAA;CACC,6BAA6B;CAC7B,4BAA4B;AAC7B;;AAEA;CACC;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;AACD;;AAEA;CACC,qCAAqC;CACrC,4BAA4B;AAC7B;;AAEA;CACC;EACC,YAAY;CACb;AACD;;AAEA;CACC,6CAA6C;CAC7C,4BAA4B;AAC7B;;AAEA;CACC;EACC,iBAAiB;CAClB;AACD;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI,gDAAgD;AACpD;;;AAGA;IACI;QACI,4BAA4B;QAC5B,sCAAsC;IAC1C;AACJ;;AAEA;IACI;QACI,4BAA4B;IAChC;AACJ;;AAEA;IACI;QACI,iBAAiB;QACjB,qBAAqB;IACzB;;IAEA;QACI,iBAAiB;EACvB,qBAAqB;QACf,YAAY;IAChB;AACJ;;AAEA;IACI;QACI,iBAAiB;EACvB,uBAAuB;QACjB,YAAY;IAChB;;IAEA;QACI,iBAAiB;EACvB,qBAAqB;QACf,UAAU;IACd;AACJ;;;AAGA;IACI,qDAAqD;CACxD,gDAAgD;AACjD;;AAEA;CACC,6CAA6C;IAC1C,oDAAoD;AACxD;;AAEA;CACC;EACC,qBAAqB;EACrB,0BAA0B;CAC3B;AACD;;AAEA;CACC;EACC,0BAA0B;CAC3B;CACA;EACC,mBAAmB;EACnB,uBAAuB;CACxB;AACD",sourcesContent:[".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n.invertColor:hover{\n\tanimation: invertColorAnimation 0.3s forwards;\n\tanimation-iteration-count: 1; \n}\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}\n\n.fadeIn {\n    animation: fadeInAnimation 0.5s linear forwards;\n}\n\n.fadeOut {\n    animation: fadeOutAnimation 0.5s linear forwards;\n}\n\n\n@keyframes fadeBlackAnimation {\n    100% {\n        color: var(--fontColorLight);\n        background-color: var(--fontColorDark);\n    }\n}\n\n@keyframes bounceAnimation {\n    100% {\n        margin-top: var(--paddingSm);\n    }\n}\n\n@keyframes fadeInAnimation {\n    0% {\n        filter: blur(2px);\n        filter: brightness(0);\n    }\n\n    100% {\n        filter: blur(0px);\n\t\tfilter: brightness(1);\n        opacity: 1.0;\n    }\n}\n\n@keyframes fadeOutAnimation {\n    0% {\n        filter: blur(0px);\n\t\tfilter: brightness(0.5);\n        opacity: 1.0;\n    }\n\n    100% {\n        filter: blur(2px);\n\t\tfilter: brightness(0);\n        opacity: 0;\n    }\n}\n\n\n.slideOut {\n    /*animation: slideOutAnimation 0.7s linear forwards;*/\n\tanimation: fadeOutAnimation 0.3s linear forwards;\n}\n\n.slideIn {\n\tanimation: fadeInAnimation 1s linear forwards;\n    /*animation: slideInAnimation 1.0s linear forwards;*/\n}\n\n@keyframes slideOutAnimation {\n\t100% {\n\t\tfilter: contrast(1.3);\n\t\ttransform: translate(100%);\n\t}\n}\n\n@keyframes slideInAnimation{\n\t0% {\n\t\ttransform: translate(100%);\n\t}\n\t100% {\n\t\tfilter: contrast(1);\n\t\ttransform: translate(0);\n\t}\n}"],sourceRoot:""}]);const i=A},20:(n,t,r)=>{r.d(t,{Z:()=>i});var e=r(537),o=r.n(e),a=r(645),A=r.n(a)()(o());A.push([n.id,".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}","",{version:3,sources:["webpack://./src/css/Common/commonClasses.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,uCAAuC;IACvC,0CAA0C;IAC1C,0CAA0C;AAC9C;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,qCAAqC;AACzC",sourcesContent:[".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}"],sourceRoot:""}]);const i=A},176:(n,t,r)=>{r.d(t,{Z:()=>d});var e=r(537),o=r.n(e),a=r(645),A=r.n(a),i=r(20),s=r(327),l=r(300),C=A()(o());C.i(i.Z),C.i(s.Z),C.i(l.Z),C.push([n.id,":root {\n\t--xSmPadding: 5px;\n\t--smPadding: 10px;\n\t--medPadding: 25px;\n\t--lgPadding: 50px;\n\n\t--mainColor: #723bf9;\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(34,36,38);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0, 0, 0, 0.5);\n\n\t--noticeColor: red;\n\t\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--shadowBox3: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}","",{version:3,sources:["webpack://./src/css/Common/global.css"],names:[],mappings:"AAIA;CACC,iBAAiB;CACjB,iBAAiB;CACjB,kBAAkB;CAClB,iBAAiB;;CAEjB,oBAAoB;;CAEpB,qBAAqB;CACrB,iBAAiB;;CAEjB,+BAA+B;CAC/B,+BAA+B;CAC/B,6BAA6B;CAC7B,+BAA+B;CAC/B,kCAAkC;;CAElC,kBAAkB;;CAElB,8BAA8B;CAC9B,iBAAiB;;CAEjB,eAAe;CACf,sCAAsC;CACtC,sCAAsC;;CAEtC,eAAe;CACf,wCAAwC;CACxC,wCAAwC;CACxC,wCAAwC;;CAExC,kEAAkE;CAClE,6BAA6B;CAC7B,mBAAmB;;CAEnB,qDAAqD;;CAErD,8EAA8E;CAC9E,0FAA0F;CAC1F,iFAAiF;;CAEjF,0CAA0C;AAC3C",sourcesContent:['@import url("commonClasses.css");\n@import url("animations.css");\n@import url("styleReset.css");\n\n:root {\n\t--xSmPadding: 5px;\n\t--smPadding: 10px;\n\t--medPadding: 25px;\n\t--lgPadding: 50px;\n\n\t--mainColor: #723bf9;\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(34,36,38);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0, 0, 0, 0.5);\n\n\t--noticeColor: red;\n\t\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--shadowBox3: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}'],sourceRoot:""}]);const d=C},300:(n,t,r)=>{r.d(t,{Z:()=>i});var e=r(537),o=r.n(e),a=r(645),A=r.n(a)()(o());A.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n\nh1 {\n    font-size: clamp(4rem, -0.875rem + 2vw, 8rem);\n}\n\nh2 {\n    font-size: clamp(1.4rem, -0.875rem + 2vw, 2.4rem);\n}\n\nh3 {\n    font-size: clamp(1.1rem, -0.875rem + 2vw, 2.1rem);\n}\n\n\nh4 {\n    font-size: clamp(1rem, -0.875rem + 2vw, 2rem);\n}\n\nh5 {\n    font-size: clamp(0.9rem, -0.875rem + 2vw, 1.3rem);\n}\n\nh6 {\n    font-size: clamp(0.7rem, -0.875rem + 2vw, 0.9rem);\n}\n","",{version:3,sources:["webpack://./src/css/Common/styleReset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;CACxB,qBAAqB;AACtB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;;;AAIA;IACI,6CAA6C;AACjD;;AAEA;IACI,iDAAiD;AACrD;;AAEA;IACI,iDAAiD;AACrD;;;AAGA;IACI,6CAA6C;AACjD;;AAEA;IACI,iDAAiD;AACrD;;AAEA;IACI,iDAAiD;AACrD",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n\nh1 {\n    font-size: clamp(4rem, -0.875rem + 2vw, 8rem);\n}\n\nh2 {\n    font-size: clamp(1.4rem, -0.875rem + 2vw, 2.4rem);\n}\n\nh3 {\n    font-size: clamp(1.1rem, -0.875rem + 2vw, 2.1rem);\n}\n\n\nh4 {\n    font-size: clamp(1rem, -0.875rem + 2vw, 2rem);\n}\n\nh5 {\n    font-size: clamp(0.9rem, -0.875rem + 2vw, 1.3rem);\n}\n\nh6 {\n    font-size: clamp(0.7rem, -0.875rem + 2vw, 0.9rem);\n}\n"],sourceRoot:""}]);const i=A},850:(n,t,r)=>{r.d(t,{Z:()=>i});var e=r(537),o=r.n(e),a=r(645),A=r.n(a)()(o());A.push([n.id,"#logo {\n    justify-self: flex-start;\n    align-self: center;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    height: fit-content;\n    padding: var(--smPadding) 0;\n    background-color: var(--mainColor);\n}\n\n#logo > * { margin: 0;}\n\n#logo > img {\n    height: 60px;\n    width: 75px;\n}\n\n#logo > h1 {\n    font-size: 2em;\n}","",{version:3,sources:["webpack://./src/css/header.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,WAAW;IACX,mBAAmB;IACnB,2BAA2B;IAC3B,kCAAkC;AACtC;;AAEA,YAAY,SAAS,CAAC;;AAEtB;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,cAAc;AAClB",sourcesContent:["#logo {\n    justify-self: flex-start;\n    align-self: center;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    height: fit-content;\n    padding: var(--smPadding) 0;\n    background-color: var(--mainColor);\n}\n\n#logo > * { margin: 0;}\n\n#logo > img {\n    height: 60px;\n    width: 75px;\n}\n\n#logo > h1 {\n    font-size: 2em;\n}"],sourceRoot:""}]);const i=A},955:(n,t,r)=>{r.d(t,{Z:()=>i});var e=r(537),o=r.n(e),a=r(645),A=r.n(a)()(o());A.push([n.id,"#leftContent {\n    padding: var(--lgPadding);\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor3);\n    width: fit-content;\n    gap: var(--lgPadding);\n    border-right: var(--smBorder) solid var(--accentColor1);\n}\n\n#leftContent > div > .listTypeHeader {\n    font-size: 1.7rem;\n    text-align: center;\n    margin: 0 0 var(--smPadding);\n    text-shadow: var(--textShadow1);\n}\n\n#leftContent > div > *:not(.listTypeHeader) {\n    margin: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0 var(--smPadding);\n    gap: var(--lgPadding);\n    transition: 0.1s;\n    cursor: pointer;\n}\n\n#leftContent > div > *  > * {\n    justify-self: center;\n}\n\n#leftContent > div > * > :last-child{\n    margin-left: auto;\n    justify-self: end;\n    color: var(--noticeColor);\n}\n\n#leftContent > div > *:not(.listTypeHeader):hover {\n    background-color: var(--accentColor5);\n    box-shadow: var(--shadowBox1);\n}\n\n#leftContent > button {\n    margin-top: auto;\n    justify-self: flex-end;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--smPadding);\n}\n\n#leftContent > button:hover {\n    transition: 0.2s;\n    filter: invert(1);\n}","",{version:3,sources:["webpack://./src/css/leftContent.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,qCAAqC;IACrC,kBAAkB;IAClB,qBAAqB;IACrB,uDAAuD;AAC3D;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,4BAA4B;IAC5B,+BAA+B;AACnC;;AAEA;IACI,SAAS;IACT,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,2BAA2B;IAC3B,qBAAqB;IACrB,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,qCAAqC;IACrC,6BAA6B;AACjC;;AAEA;IACI,gBAAgB;IAChB,sBAAsB;IACtB,iCAAiC;IACjC,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB",sourcesContent:["#leftContent {\n    padding: var(--lgPadding);\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor3);\n    width: fit-content;\n    gap: var(--lgPadding);\n    border-right: var(--smBorder) solid var(--accentColor1);\n}\n\n#leftContent > div > .listTypeHeader {\n    font-size: 1.7rem;\n    text-align: center;\n    margin: 0 0 var(--smPadding);\n    text-shadow: var(--textShadow1);\n}\n\n#leftContent > div > *:not(.listTypeHeader) {\n    margin: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0 var(--smPadding);\n    gap: var(--lgPadding);\n    transition: 0.1s;\n    cursor: pointer;\n}\n\n#leftContent > div > *  > * {\n    justify-self: center;\n}\n\n#leftContent > div > * > :last-child{\n    margin-left: auto;\n    justify-self: end;\n    color: var(--noticeColor);\n}\n\n#leftContent > div > *:not(.listTypeHeader):hover {\n    background-color: var(--accentColor5);\n    box-shadow: var(--shadowBox1);\n}\n\n#leftContent > button {\n    margin-top: auto;\n    justify-self: flex-end;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--smPadding);\n}\n\n#leftContent > button:hover {\n    transition: 0.2s;\n    filter: invert(1);\n}"],sourceRoot:""}]);const i=A},304:(n,t,r)=>{r.d(t,{Z:()=>i});var e=r(537),o=r.n(e),a=r(645),A=r.n(a)()(o());A.push([n.id,"#rightContent {\n    margin: 0;\n    padding: var(--lgPadding);\n    background-color: var(--accentColor2);\n    width: 100%;\n    gap: var(--medPadding);\n    border-right: var(--smBorder) solid var(--accentColor1);\n}","",{version:3,sources:["webpack://./src/css/rightContent.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,yBAAyB;IACzB,qCAAqC;IACrC,WAAW;IACX,sBAAsB;IACtB,uDAAuD;AAC3D",sourcesContent:["#rightContent {\n    margin: 0;\n    padding: var(--lgPadding);\n    background-color: var(--accentColor2);\n    width: 100%;\n    gap: var(--medPadding);\n    border-right: var(--smBorder) solid var(--accentColor1);\n}"],sourceRoot:""}]);const i=A},402:(n,t,r)=>{r.d(t,{Z:()=>c});var e=r(537),o=r.n(e),a=r(645),A=r.n(a),i=r(176),s=r(850),l=r(955),C=r(304),d=A()(o());d.i(i.Z),d.i(s.Z),d.i(l.Z),d.i(C.Z),d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap);"]),d.push([n.id,"html,\nbody {\n    padding: 0px;\n    margin: 0px;\n    height: 100%;\n    width: 100%;\n    /*font-family: 'Roboto', sans-serif;*/\n    font-family: 'Lato', sans-serif;\n    color: var(--fontLight);\n\n\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor2);\n    filter: blur(2px);\n    filter: brightness(0);\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n}\n\n#content > * {\n    height: calc(100% - (100px));\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAQA;;IAEI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,WAAW;IACX,qCAAqC;IACrC,+BAA+B;IAC/B,uBAAuB;;;AAG3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,qCAAqC;IACrC,iBAAiB;IACjB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,4BAA4B;AAChC",sourcesContent:["@import url(\"./Common/global.css\");\n@import url(\"./header.css\");\n@import url(\"./leftContent.css\");\n@import url(\"./rightContent.css\");\n\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap');\n\nhtml,\nbody {\n    padding: 0px;\n    margin: 0px;\n    height: 100%;\n    width: 100%;\n    /*font-family: 'Roboto', sans-serif;*/\n    font-family: 'Lato', sans-serif;\n    color: var(--fontLight);\n\n\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor2);\n    filter: blur(2px);\n    filter: brightness(0);\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n}\n\n#content > * {\n    height: calc(100% - (100px));\n}"],sourceRoot:""}]);const c=d},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var r="",e=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),e&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=n(t),e&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(n,r,e,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(e)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var l=0;l<n.length;l++){var C=[].concat(n[l]);e&&A[C[0]]||(void 0!==a&&(void 0===C[5]||(C[1]="@layer".concat(C[5].length>0?" ".concat(C[5]):""," {").concat(C[1],"}")),C[5]=a),r&&(C[2]?(C[1]="@media ".concat(C[2]," {").concat(C[1],"}"),C[2]=r):C[2]=r),o&&(C[4]?(C[1]="@supports (".concat(C[4],") {").concat(C[1],"}"),C[4]=o):C[4]="".concat(o)),t.push(C))}},t}},537:n=>{n.exports=function(n){var t=n[1],r=n[3];if(!r)return t;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(o," */"),A=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[t].concat(A).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function r(n){for(var r=-1,e=0;e<t.length;e++)if(t[e].identifier===n){r=e;break}return r}function e(n,e){for(var a={},A=[],i=0;i<n.length;i++){var s=n[i],l=e.base?s[0]+e.base:s[0],C=a[l]||0,d="".concat(l," ").concat(C);a[l]=C+1;var c=r(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==c)t[c].references++,t[c].updater(m);else{var p=o(m,e);e.byIndex=i,t.splice(i,0,{identifier:d,updater:p,references:1})}A.push(d)}return A}function o(n,t){var r=t.domAPI(t);return r.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;r.update(n=t)}else r.remove()}}n.exports=function(n,o){var a=e(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var i=r(a[A]);t[i].references--}for(var s=e(n,o),l=0;l<a.length;l++){var C=r(a[l]);0===t[C].references&&(t[C].updater(),t.splice(C,1))}a=s}}},569:n=>{var t={};n.exports=function(n,r){var e=function(n){if(void 0===t[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}t[n]=r}return t[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(r)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,r)=>{n.exports=function(n){var t=r.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(r){!function(n,t,r){var e="";r.supports&&(e+="@supports (".concat(r.supports,") {")),r.media&&(e+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(e+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),e+=r.css,o&&(e+="}"),r.media&&(e+="}"),r.supports&&(e+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(e,n,t.options)}(t,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},f={};function B(n){var t=f[n];if(void 0!==t)return t.exports;var r=f[n]={id:n,exports:{}};return p[n](r,r.exports,B),r.exports}B.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return B.d(t,{a:t}),t},B.d=(n,t)=>{for(var r in t)B.o(t,r)&&!B.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},B.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),B.nc=void 0,n=B(379),t=B.n(n),r=B(795),e=B.n(r),o=B(569),a=B.n(o),A=B(565),i=B.n(A),s=B(216),l=B.n(s),C=B(589),d=B.n(C),c=B(402),(m={}).styleTagTransform=d(),m.setAttributes=i(),m.insert=a().bind(null,"head"),m.domAPI=e(),m.insertStyleElement=l(),t()(c.Z,m),c.Z&&c.Z.locals&&c.Z.locals,window.addEventListener("load",(()=>{}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,