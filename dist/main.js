(()=>{"use strict";var n={327:(n,t,o)=>{o.d(t,{Z:()=>i});var e=o(537),r=o.n(e),a=o(645),A=o.n(a)()(r());A.push([n.id,".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}\n\n.fadeIn {\n    animation: fadeInAnimation 0.5s linear forwards;\n}\n\n.fadeOut {\n    animation: fadeOutAnimation 0.5s linear forwards;\n}\n\n\n@keyframes fadeBlackAnimation {\n    100% {\n        color: var(--fontColorLight);\n        background-color: var(--fontColorDark);\n    }\n}\n\n@keyframes bounceAnimation {\n    100% {\n        margin-top: var(--paddingSm);\n    }\n}\n\n@keyframes fadeInAnimation {\n    0% {\n        filter: blur(2px);\n        filter: brightness(0);\n    }\n\n    100% {\n        filter: blur(0px);\n\t\tfilter: brightness(1);\n        opacity: 1.0;\n    }\n}\n\n@keyframes fadeOutAnimation {\n    0% {\n        filter: blur(0px);\n\t\tfilter: brightness(0.5);\n        opacity: 1.0;\n    }\n\n    100% {\n        filter: blur(2px);\n\t\tfilter: brightness(0);\n        opacity: 0;\n    }\n}\n\n\n.slideOut {\n    /*animation: slideOutAnimation 0.7s linear forwards;*/\n\tanimation: fadeOutAnimation 0.3s linear forwards;\n}\n\n.slideIn {\n\tanimation: fadeInAnimation 1s linear forwards;\n    /*animation: slideInAnimation 1.0s linear forwards;*/\n}\n\n@keyframes slideOutAnimation {\n\t100% {\n\t\tfilter: contrast(1.3);\n\t\ttransform: translate(100%);\n\t}\n}\n\n@keyframes slideInAnimation{\n\t0% {\n\t\ttransform: translate(100%);\n\t}\n\t100% {\n\t\tfilter: contrast(1);\n\t\ttransform: translate(0);\n\t}\n}","",{version:3,sources:["webpack://./src/css/Common/animations.css"],names:[],mappings:"AAAA;CACC,6BAA6B;CAC7B,4BAA4B;AAC7B;;AAEA;CACC;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;AACD;;AAEA;CACC,qCAAqC;CACrC,4BAA4B;AAC7B;;AAEA;CACC;EACC,YAAY;CACb;AACD;;;;AAIA;CACC;EACC,iBAAiB;CAClB;AACD;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI,gDAAgD;AACpD;;;AAGA;IACI;QACI,4BAA4B;QAC5B,sCAAsC;IAC1C;AACJ;;AAEA;IACI;QACI,4BAA4B;IAChC;AACJ;;AAEA;IACI;QACI,iBAAiB;QACjB,qBAAqB;IACzB;;IAEA;QACI,iBAAiB;EACvB,qBAAqB;QACf,YAAY;IAChB;AACJ;;AAEA;IACI;QACI,iBAAiB;EACvB,uBAAuB;QACjB,YAAY;IAChB;;IAEA;QACI,iBAAiB;EACvB,qBAAqB;QACf,UAAU;IACd;AACJ;;;AAGA;IACI,qDAAqD;CACxD,gDAAgD;AACjD;;AAEA;CACC,6CAA6C;IAC1C,oDAAoD;AACxD;;AAEA;CACC;EACC,qBAAqB;EACrB,0BAA0B;CAC3B;AACD;;AAEA;CACC;EACC,0BAA0B;CAC3B;CACA;EACC,mBAAmB;EACnB,uBAAuB;CACxB;AACD",sourcesContent:[".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}\n\n.fadeIn {\n    animation: fadeInAnimation 0.5s linear forwards;\n}\n\n.fadeOut {\n    animation: fadeOutAnimation 0.5s linear forwards;\n}\n\n\n@keyframes fadeBlackAnimation {\n    100% {\n        color: var(--fontColorLight);\n        background-color: var(--fontColorDark);\n    }\n}\n\n@keyframes bounceAnimation {\n    100% {\n        margin-top: var(--paddingSm);\n    }\n}\n\n@keyframes fadeInAnimation {\n    0% {\n        filter: blur(2px);\n        filter: brightness(0);\n    }\n\n    100% {\n        filter: blur(0px);\n\t\tfilter: brightness(1);\n        opacity: 1.0;\n    }\n}\n\n@keyframes fadeOutAnimation {\n    0% {\n        filter: blur(0px);\n\t\tfilter: brightness(0.5);\n        opacity: 1.0;\n    }\n\n    100% {\n        filter: blur(2px);\n\t\tfilter: brightness(0);\n        opacity: 0;\n    }\n}\n\n\n.slideOut {\n    /*animation: slideOutAnimation 0.7s linear forwards;*/\n\tanimation: fadeOutAnimation 0.3s linear forwards;\n}\n\n.slideIn {\n\tanimation: fadeInAnimation 1s linear forwards;\n    /*animation: slideInAnimation 1.0s linear forwards;*/\n}\n\n@keyframes slideOutAnimation {\n\t100% {\n\t\tfilter: contrast(1.3);\n\t\ttransform: translate(100%);\n\t}\n}\n\n@keyframes slideInAnimation{\n\t0% {\n\t\ttransform: translate(100%);\n\t}\n\t100% {\n\t\tfilter: contrast(1);\n\t\ttransform: translate(0);\n\t}\n}"],sourceRoot:""}]);const i=A},20:(n,t,o)=>{o.d(t,{Z:()=>i});var e=o(537),r=o.n(e),a=o(645),A=o.n(a)()(r());A.push([n.id,".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}\n\n","",{version:3,sources:["webpack://./src/css/Common/commonClasses.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,uCAAuC;IACvC,0CAA0C;IAC1C,0CAA0C;AAC9C;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,qCAAqC;AACzC",sourcesContent:[".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}\n\n"],sourceRoot:""}]);const i=A},176:(n,t,o)=>{o.d(t,{Z:()=>C});var e=o(537),r=o.n(e),a=o(645),A=o.n(a),i=o(20),s=o(327),d=o(300),l=A()(r());l.i(i.Z),l.i(s.Z),l.i(d.Z),l.push([n.id,":root {\n\t--xSmPadding: 0.4vw;\n\t--smPadding: 0.8vw;\n\t--medPadding: 1vw;\n\t--lgPadding: 1.5vw;\n\t--xLgPadding: 2.2vw;\n\n\t--mainColor: #616161;\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(34,36,38);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0, 0, 0, 0.5);\n\n\t--noticeColor: orangered;\n\t\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--shadowBox3: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.9) 0px 0px 0px 1px;;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}","",{version:3,sources:["webpack://./src/css/Common/global.css"],names:[],mappings:"AAIA;CACC,mBAAmB;CACnB,kBAAkB;CAClB,iBAAiB;CACjB,kBAAkB;CAClB,mBAAmB;;CAEnB,oBAAoB;;CAEpB,qBAAqB;CACrB,iBAAiB;;CAEjB,+BAA+B;CAC/B,+BAA+B;CAC/B,6BAA6B;CAC7B,+BAA+B;CAC/B,kCAAkC;;CAElC,wBAAwB;;CAExB,8BAA8B;CAC9B,iBAAiB;;CAEjB,eAAe;CACf,sCAAsC;CACtC,sCAAsC;;CAEtC,eAAe;CACf,wCAAwC;CACxC,wCAAwC;CACxC,wCAAwC;;CAExC,kEAAkE;CAClE,6BAA6B;CAC7B,mBAAmB;;CAEnB,qDAAqD;;CAErD,8EAA8E;CAC9E,0FAA0F;CAC1F,gGAAgG;;CAEhG,0CAA0C;AAC3C",sourcesContent:['@import url("commonClasses.css");\n@import url("animations.css");\n@import url("styleReset.css");\n\n:root {\n\t--xSmPadding: 0.4vw;\n\t--smPadding: 0.8vw;\n\t--medPadding: 1vw;\n\t--lgPadding: 1.5vw;\n\t--xLgPadding: 2.2vw;\n\n\t--mainColor: #616161;\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(34,36,38);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0, 0, 0, 0.5);\n\n\t--noticeColor: orangered;\n\t\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--lgRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--shadowBox3: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.9) 0px 0px 0px 1px;;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}'],sourceRoot:""}]);const C=l},300:(n,t,o)=>{o.d(t,{Z:()=>i});var e=o(537),r=o.n(e),a=o(645),A=o.n(a)()(r());A.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-min-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n","",{version:3,sources:["webpack://./src/css/Common/styleReset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;CACxB,qBAAqB;AACtB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,kBAAkB;AACnB;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-min-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n"],sourceRoot:""}]);const i=A},850:(n,t,o)=>{o.d(t,{Z:()=>i});var e=o(537),r=o.n(e),a=o(645),A=o.n(a)()(r());A.push([n.id,"#logoWrapper {\n    background-color: var(--accentColor5);\n    margin: 0;\n    flex-grow: 1;\n    display: flex;\n    border-bottom: var(--smBorder) solid black;\n}\n\n#logo {\n    margin: 0;\n    flex-grow: 1;\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n}\n\n#logo > * { \n    margin: 0;\n}\n\n#logo > h2 {\n    font-size: 24px;\n    align-self: flex-end;\n}\n\n#logo > img {\n    height: 60px;\n    width: auto;\n}\n\n#logo > button {\n    margin-left: auto;\n    margin-right: var(--smPadding);\n    justify-self: center;\n}","",{version:3,sources:["webpack://./src/css/header.css"],names:[],mappings:"AAAA;IACI,qCAAqC;IACrC,SAAS;IACT,YAAY;IACZ,aAAa;IACb,0CAA0C;AAC9C;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,mBAAmB;IACnB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,8BAA8B;IAC9B,oBAAoB;AACxB",sourcesContent:["#logoWrapper {\n    background-color: var(--accentColor5);\n    margin: 0;\n    flex-grow: 1;\n    display: flex;\n    border-bottom: var(--smBorder) solid black;\n}\n\n#logo {\n    margin: 0;\n    flex-grow: 1;\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n}\n\n#logo > * { \n    margin: 0;\n}\n\n#logo > h2 {\n    font-size: 24px;\n    align-self: flex-end;\n}\n\n#logo > img {\n    height: 60px;\n    width: auto;\n}\n\n#logo > button {\n    margin-left: auto;\n    margin-right: var(--smPadding);\n    justify-self: center;\n}"],sourceRoot:""}]);const i=A},955:(n,t,o)=>{o.d(t,{Z:()=>i});var e=o(537),r=o.n(e),a=o(645),A=o.n(a)()(r());A.push([n.id,"#leftContent {\n    margin: 0;\n    padding: var(--lgPadding) var(--xLgPadding);\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor3);\n    width: fit-content;\n    min-height: 100vh;\n    gap: var(--xLgPadding);\n}\n\n#leftContent > div {\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#leftContent > div > .listTypeHeader {\n    text-align: center;\n    margin: 0 0 var(--smPadding);\n    text-shadow: var(--textShadow1);\n}\n\n#leftContent > div > .active {\n    background-color: var(--accentColor5);\n    box-shadow: var(--shadowBox3);\n}\n\n#leftContent > div > *:not(.listTypeHeader) {\n    margin: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: var(--smPadding) var(--medPadding);\n    transition: 0.1s;\n    border-radius: var(--roundBorder);\n    cursor: pointer;\n}\n\n#leftContent > div > *  > * {\n    justify-self: center;\n}\n\n#leftContent > div > * > :last-child{\n    margin-left: auto;\n    justify-self: end;\n    color: var(--noticeColor);\n}\n\n#leftContent > div > *:not(.listTypeHeader):not(.active):hover{\n    background-color: var(--accentColor5);\n    box-shadow: var(--shadowBox1); \n    transition: 0.2s;\n    animation-fill-mode: both;\n    box-shadow: inset 2rem 20rem 2rem 20rem var(--accentColor5);\n}\n","",{version:3,sources:["webpack://./src/css/leftContent.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,2CAA2C;IAC3C,aAAa;IACb,sBAAsB;IACtB,qCAAqC;IACrC,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,4BAA4B;IAC5B,+BAA+B;AACnC;;AAEA;IACI,qCAAqC;IACrC,6BAA6B;AACjC;;AAEA;IACI,SAAS;IACT,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,2CAA2C;IAC3C,gBAAgB;IAChB,iCAAiC;IACjC,eAAe;AACnB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,qCAAqC;IACrC,6BAA6B;IAC7B,gBAAgB;IAChB,yBAAyB;IACzB,2DAA2D;AAC/D",sourcesContent:["#leftContent {\n    margin: 0;\n    padding: var(--lgPadding) var(--xLgPadding);\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor3);\n    width: fit-content;\n    min-height: 100vh;\n    gap: var(--xLgPadding);\n}\n\n#leftContent > div {\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#leftContent > div > .listTypeHeader {\n    text-align: center;\n    margin: 0 0 var(--smPadding);\n    text-shadow: var(--textShadow1);\n}\n\n#leftContent > div > .active {\n    background-color: var(--accentColor5);\n    box-shadow: var(--shadowBox3);\n}\n\n#leftContent > div > *:not(.listTypeHeader) {\n    margin: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: var(--smPadding) var(--medPadding);\n    transition: 0.1s;\n    border-radius: var(--roundBorder);\n    cursor: pointer;\n}\n\n#leftContent > div > *  > * {\n    justify-self: center;\n}\n\n#leftContent > div > * > :last-child{\n    margin-left: auto;\n    justify-self: end;\n    color: var(--noticeColor);\n}\n\n#leftContent > div > *:not(.listTypeHeader):not(.active):hover{\n    background-color: var(--accentColor5);\n    box-shadow: var(--shadowBox1); \n    transition: 0.2s;\n    animation-fill-mode: both;\n    box-shadow: inset 2rem 20rem 2rem 20rem var(--accentColor5);\n}\n"],sourceRoot:""}]);const i=A},304:(n,t,o)=>{o.d(t,{Z:()=>i});var e=o(537),r=o.n(e),a=o(645),A=o.n(a)()(r());A.push([n.id,'#rightContent {\n    margin: 0;\n    padding: var(--xLgPadding);\n    background-color: var(--accentColor2);\n    width: 100%;\n    gap: var(--medPadding);\n}\n\n#rightContent > * {    margin: 0;}\n#rightContent > :first-child{\n    text-align: center;\n    margin-bottom: var(--medPadding);\n    font-size: 28px;\n}\n\n#rightContent > #taskList {\n    display: flex;\n    flex-direction: column;\n    gap: var(--smPadding);\n    padding: var(--lgPadding);\n    justify-content: center;\n    align-items: center;\n}\n\n#rightContent > #taskList > .task {\n    margin: 0;\n    width: 100%;\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    background-color: rgba(25, 21, 30, 0.8);\n    padding: var(--medPadding);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: var(--lgPadding);\n    cursor: pointer;\n    overflow-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#rightContent > #taskList > .task.finished {\n    filter: opacity(0.4);\n}\n\n#rightContent > #taskList > .task.finished > img {\n    height: 28px;\n}\n#rightContent > #taskList > .task.finished::after {\n    position: absolute;\n    left: -1vw;\n    top: 58%;\n    min-height: 1px;\n    background: black;\n    content: "";\n    width: calc(100% + 2vw);\n    display: block;\n  }\n\n  #rightContent > #taskList > .task:hover {\n    box-shadow: var(--shadowBox2);\n    filter: opacity(1);\n}',"",{version:3,sources:["webpack://./src/css/rightContent.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,0BAA0B;IAC1B,qCAAqC;IACrC,WAAW;IACX,sBAAsB;AAC1B;;AAEA,uBAAuB,SAAS,CAAC;AACjC;IACI,kBAAkB;IAClB,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,qBAAqB;IACrB,yBAAyB;IACzB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,SAAS;IACT,WAAW;IACX,0CAA0C;IAC1C,uCAAuC;IACvC,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;IACrB,eAAe;IACf,yBAAyB;IACzB,qBAAqB;AACzB;;;AAGA;IACI,oBAAoB;AACxB;;AAEA;IACI,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,UAAU;IACV,QAAQ;IACR,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,uBAAuB;IACvB,cAAc;EAChB;;EAEA;IACE,6BAA6B;IAC7B,kBAAkB;AACtB",sourcesContent:['#rightContent {\n    margin: 0;\n    padding: var(--xLgPadding);\n    background-color: var(--accentColor2);\n    width: 100%;\n    gap: var(--medPadding);\n}\n\n#rightContent > * {    margin: 0;}\n#rightContent > :first-child{\n    text-align: center;\n    margin-bottom: var(--medPadding);\n    font-size: 28px;\n}\n\n#rightContent > #taskList {\n    display: flex;\n    flex-direction: column;\n    gap: var(--smPadding);\n    padding: var(--lgPadding);\n    justify-content: center;\n    align-items: center;\n}\n\n#rightContent > #taskList > .task {\n    margin: 0;\n    width: 100%;\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    background-color: rgba(25, 21, 30, 0.8);\n    padding: var(--medPadding);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: var(--lgPadding);\n    cursor: pointer;\n    overflow-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#rightContent > #taskList > .task.finished {\n    filter: opacity(0.4);\n}\n\n#rightContent > #taskList > .task.finished > img {\n    height: 28px;\n}\n#rightContent > #taskList > .task.finished::after {\n    position: absolute;\n    left: -1vw;\n    top: 58%;\n    min-height: 1px;\n    background: black;\n    content: "";\n    width: calc(100% + 2vw);\n    display: block;\n  }\n\n  #rightContent > #taskList > .task:hover {\n    box-shadow: var(--shadowBox2);\n    filter: opacity(1);\n}'],sourceRoot:""}]);const i=A},402:(n,t,o)=>{o.d(t,{Z:()=>c});var e=o(537),r=o.n(e),a=o(645),A=o.n(a),i=o(176),s=o(850),d=o(955),l=o(304),C=A()(r());C.i(i.Z),C.i(s.Z),C.i(d.Z),C.i(l.Z),C.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),C.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap);"]),C.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n\n}\nhtml,\nbody {\n    margin: 0px;\n    padding: 0px;\n    min-height: 100vh;\n    min-width: 100%;\n    font-family: 'Lato', sans-serif;\n    font-family: \"Roboto\";\n    color: var(--fontLight);\n\n}\n\nbody {\n}\n\n#main{\n    min-width: 100%;\n    min-height: 100vh;\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    min-height: 100vh;\n    width: 100%;\n}\n\nbutton {\n    font-size: 12px;\n    cursor: pointer;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--xSmPadding);\n}\n\nbutton:hover {\n    transition: 0.2s;\n    animation-fill-mode: both;\n    box-shadow: inset 2rem 0 0 var(--accentColor2);\n}\n\n.invertColor {\n    filter: invert(100%)\n}\n\n@media (max-width:500px) { \n    a{\n        font-size: 12px;\n    }\n }","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AASA;IACI,SAAS;IACT,UAAU;;AAEd;AACA;;IAEI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,+BAA+B;IAC/B,qBAAqB;IACrB,uBAAuB;;AAE3B;;AAEA;AACA;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,iBAAiB;IACjB,WAAW;AACf;;AAEA;IACI,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,yBAAyB;IACzB,0BAA0B;AAC9B;;AAEA;IACI,gBAAgB;IAChB,yBAAyB;IACzB,8CAA8C;AAClD;;AAEA;IACI;AACJ;;AAEA;IACI;QACI,eAAe;IACnB;CACH",sourcesContent:['@import url("./Common/global.css");\n@import url("./header.css");\n@import url("./leftContent.css");\n@import url("./rightContent.css");\n\n@import url(\'https://fonts.googleapis.com/css2?family=Roboto&display=swap\');\n@import url(\'https://fonts.googleapis.com/css2?family=Lato:wght@400&display=swap\');\n\n\n* {\n    margin: 0;\n    padding: 0;\n\n}\nhtml,\nbody {\n    margin: 0px;\n    padding: 0px;\n    min-height: 100vh;\n    min-width: 100%;\n    font-family: \'Lato\', sans-serif;\n    font-family: "Roboto";\n    color: var(--fontLight);\n\n}\n\nbody {\n}\n\n#main{\n    min-width: 100%;\n    min-height: 100vh;\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    min-height: 100vh;\n    width: 100%;\n}\n\nbutton {\n    font-size: 12px;\n    cursor: pointer;\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n    padding: var(--xSmPadding);\n}\n\nbutton:hover {\n    transition: 0.2s;\n    animation-fill-mode: both;\n    box-shadow: inset 2rem 0 0 var(--accentColor2);\n}\n\n.invertColor {\n    filter: invert(100%)\n}\n\n@media (max-width:500px) { \n    a{\n        font-size: 12px;\n    }\n }'],sourceRoot:""}]);const c=C},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var o="",e=void 0!==t[5];return t[4]&&(o+="@supports (".concat(t[4],") {")),t[2]&&(o+="@media ".concat(t[2]," {")),e&&(o+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),o+=n(t),e&&(o+="}"),t[2]&&(o+="}"),t[4]&&(o+="}"),o})).join("")},t.i=function(n,o,e,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(e)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);e&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),o&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=o):l[2]=o),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:n=>{n.exports=function(n){var t=n[1],o=n[3];if(!o)return t;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(r," */"),A=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[t].concat(A).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function o(n){for(var o=-1,e=0;e<t.length;e++)if(t[e].identifier===n){o=e;break}return o}function e(n,e){for(var a={},A=[],i=0;i<n.length;i++){var s=n[i],d=e.base?s[0]+e.base:s[0],l=a[d]||0,C="".concat(d," ").concat(l);a[d]=l+1;var c=o(C),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==c)t[c].references++,t[c].updater(m);else{var g=r(m,e);e.byIndex=i,t.splice(i,0,{identifier:C,updater:g,references:1})}A.push(C)}return A}function r(n,t){var o=t.domAPI(t);return o.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;o.update(n=t)}else o.remove()}}n.exports=function(n,r){var a=e(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var i=o(a[A]);t[i].references--}for(var s=e(n,r),d=0;d<a.length;d++){var l=o(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:n=>{var t={};n.exports=function(n,o){var e=function(n){if(void 0===t[n]){var o=document.querySelector(n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(n){o=null}t[n]=o}return t[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(o)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,o)=>{n.exports=function(n){var t=o.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(o){!function(n,t,o){var e="";o.supports&&(e+="@supports (".concat(o.supports,") {")),o.media&&(e+="@media ".concat(o.media," {"));var r=void 0!==o.layer;r&&(e+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),e+=o.css,r&&(e+="}"),o.media&&(e+="}"),o.supports&&(e+="}");var a=o.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(e,n,t.options)}(t,n,o)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function o(e){var r=t[e];if(void 0!==r)return r.exports;var a=t[e]={id:e,exports:{}};return n[e](a,a.exports,o),a.exports}o.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return o.d(t,{a:t}),t},o.d=(n,t)=>{for(var e in t)o.o(t,e)&&!o.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})},o.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),o.nc=void 0,(()=>{var n=o(379),t=o.n(n),e=o(795),r=o.n(e),a=o(569),A=o.n(a),i=o(565),s=o.n(i),d=o(216),l=o.n(d),C=o(589),c=o.n(C),m=o(402),g={};g.styleTagTransform=c(),g.setAttributes=s(),g.insert=A().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),t()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;const B=()=>function(){const n={nightmodeBtn:function(){const n=[document.body.querySelector("#content").classList,document.body.querySelector("#logo").classList];for(const t of n)t.contains("invertColor")?t.remove("invertColor"):t.add("invertColor")},newProjectBtn:function(){f().styleElement(document.querySelector("#content"),"blur(2px)",!0),f().create()}};let t,o;const e=[t={id:"nightmodeBtn",callback:n.nightmodeBtn,trigger:"click"},o={id:"newProjectBtn",callback:n.newProjectBtn,trigger:"click"}];return{createEventHandlers:()=>{for(const n of e)document.querySelector("#"+n.id).addEventListener(n.trigger,n.callback)}}}().createEventHandlers(),f=function(){return{start:()=>B(),styleElement:(n,t,o)=>{o&&(n.style.filter,n.style.filter=t)},create:()=>{}}};window.addEventListener("load",(()=>(console.log("Main Start"),void f().start())))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,